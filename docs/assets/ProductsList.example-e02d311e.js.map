{"version":3,"file":"ProductsList.example-e02d311e.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/getOverlayAlpha.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Paper/paperClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Paper/Paper.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/Ripple.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/touchRippleClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/TouchRipple.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/buttonBaseClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/ButtonBase.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Divider/dividerClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/List/ListContext.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemText/listItemTextClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/MenuItem/menuItemClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.5_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/MenuItem/MenuItem.js","../../../../node_modules/.pnpm/react-virtuoso@4.5.0_react-dom@18.2.0_react@18.2.0/node_modules/react-virtuoso/dist/index.mjs","../../stories/examples/ProductsList/ProductsList.example.tsx"],"sourcesContent":["// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTouchRippleUtilityClass(slot) {\n  return generateUtilityClass('MuiTouchRipple', slot);\n}\nconst touchRippleClasses = generateUtilityClasses('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);\nexport default touchRippleClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n});\n\n// This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  const {\n      center: centerProp = false,\n      classes = {},\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]);\n\n  // Used to filter out mouse emulated events on mobile.\n  const ignoringMouseDown = React.useRef(false);\n  // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n  const startTimer = React.useRef(0);\n\n  // This is the hook called once the previous timeout is ready.\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      if (startTimer.current) {\n        clearTimeout(startTimer.current);\n      }\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb = () => {}) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n    } = options;\n    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n    if ((event == null ? void 0 : event.type) === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    };\n\n    // Get the size of the ripple\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n      // For some reason the animation is broken on Mobile Chrome if the size is even.\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    }\n\n    // Touche devices\n    if (event != null && event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        };\n        // Delay the execution of the ripple effect.\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current);\n\n    // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonBaseUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonBase', slot);\n}\nconst buttonBaseClasses = generateUtilityClasses('MuiButtonBase', ['root', 'disabled', 'focusVisible']);\nexport default buttonBaseClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n  return composedClasses;\n};\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  },\n\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  const {\n      action,\n      centerRipple = false,\n      children,\n      className,\n      component = 'button',\n      disabled = false,\n      disableRipple = false,\n      disableTouchRipple = false,\n      focusRipple = false,\n      LinkComponent = 'a',\n      onBlur,\n      onClick,\n      onContextMenu,\n      onDragLeave,\n      onFocus,\n      onFocusVisible,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseLeave,\n      onMouseUp,\n      onTouchEnd,\n      onTouchMove,\n      onTouchStart,\n      tabIndex = 0,\n      TouchRippleProps,\n      touchRippleRef,\n      type\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      const ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  const buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ListContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\nexport default ListContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst PUBLISH = 0;\nconst SUBSCRIBE = 1;\nconst RESET = 2;\nconst VALUE = 4;\nfunction compose(a, b) {\n  return (arg) => a(b(arg));\n}\nfunction thrush(arg, proc) {\n  return proc(arg);\n}\nfunction curry2to1(proc, arg1) {\n  return (arg2) => proc(arg1, arg2);\n}\nfunction curry1to0(proc, arg) {\n  return () => proc(arg);\n}\nfunction tap(arg, proc) {\n  proc(arg);\n  return arg;\n}\nfunction tup(...args) {\n  return args;\n}\nfunction call(proc) {\n  proc();\n}\nfunction always(value) {\n  return () => value;\n}\nfunction joinProc(...procs) {\n  return () => {\n    procs.map(call);\n  };\n}\nfunction isDefined(arg) {\n  return arg !== void 0;\n}\nfunction noop() {\n}\nfunction subscribe(emitter, subscription) {\n  return emitter(SUBSCRIBE, subscription);\n}\nfunction publish(publisher, value) {\n  publisher(PUBLISH, value);\n}\nfunction reset(emitter) {\n  emitter(RESET);\n}\nfunction getValue(depot) {\n  return depot(VALUE);\n}\nfunction connect(emitter, publisher) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH));\n}\nfunction handleNext(emitter, subscription) {\n  const unsub = emitter(SUBSCRIBE, (value) => {\n    unsub();\n    subscription(value);\n  });\n  return unsub;\n}\nfunction stream() {\n  const subscriptions = [];\n  return (action, arg) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length);\n        return;\n      case SUBSCRIBE:\n        subscriptions.push(arg);\n        return () => {\n          const indexOf = subscriptions.indexOf(arg);\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1);\n          }\n        };\n      case PUBLISH:\n        subscriptions.slice().forEach((subscription) => {\n          subscription(arg);\n        });\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction statefulStream(initial) {\n  let value = initial;\n  const innerSubject = stream();\n  return (action, arg) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg;\n        subscription(value);\n        break;\n      case PUBLISH:\n        value = arg;\n        break;\n      case VALUE:\n        return value;\n    }\n    return innerSubject(action, arg);\n  };\n}\nfunction eventHandler(emitter) {\n  let unsub;\n  let currentSubscription;\n  const cleanup = () => unsub && unsub();\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return;\n          }\n          cleanup();\n          currentSubscription = subscription;\n          unsub = subscribe(emitter, subscription);\n          return unsub;\n        } else {\n          cleanup();\n          return noop;\n        }\n      case RESET:\n        cleanup();\n        currentSubscription = null;\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction streamFromEmitter(emitter) {\n  return tap(stream(), (stream2) => connect(emitter, stream2));\n}\nfunction statefulStreamFromEmitter(emitter, initial) {\n  return tap(statefulStream(initial), (stream2) => connect(emitter, stream2));\n}\nfunction combineOperators(...operators) {\n  return (subscriber) => {\n    return operators.reduceRight(thrush, subscriber);\n  };\n}\nfunction pipe(source, ...operators) {\n  const project = combineOperators(...operators);\n  return (action, subscription) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription));\n      case RESET:\n        reset(source);\n        return;\n    }\n  };\n}\nfunction defaultComparator(previous, next) {\n  return previous === next;\n}\nfunction distinctUntilChanged(comparator = defaultComparator) {\n  let current;\n  return (done) => (next) => {\n    if (!comparator(current, next)) {\n      current = next;\n      done(next);\n    }\n  };\n}\nfunction filter(predicate) {\n  return (done) => (value) => {\n    predicate(value) && done(value);\n  };\n}\nfunction map(project) {\n  return (done) => compose(done, project);\n}\nfunction mapTo(value) {\n  return (done) => () => done(value);\n}\nfunction scan(scanner, initial) {\n  return (done) => (value) => done(initial = scanner(initial, value));\n}\nfunction skip(times) {\n  return (done) => (value) => {\n    times > 0 ? times-- : done(value);\n  };\n}\nfunction throttleTime(interval) {\n  let currentValue = null;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      return;\n    }\n    timeout = setTimeout(() => {\n      timeout = void 0;\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction debounceTime(interval) {\n  let currentValue;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction withLatestFrom(...sources) {\n  const values = new Array(sources.length);\n  let called = 0;\n  let pendingCall = null;\n  const allCalled = Math.pow(2, sources.length) - 1;\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      const prevCalled = called;\n      called = called | bit;\n      values[index] = value;\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall();\n        pendingCall = null;\n      }\n    });\n  });\n  return (done) => (value) => {\n    const call2 = () => done([value].concat(values));\n    if (called === allCalled) {\n      call2();\n    } else {\n      pendingCall = call2;\n    }\n  };\n}\nfunction merge(...sources) {\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map((source) => subscribe(source, subscription)));\n      case RESET:\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction duc(source, comparator = defaultComparator) {\n  return pipe(source, distinctUntilChanged(comparator));\n}\nfunction combineLatest(...emitters) {\n  const innerSubject = stream();\n  const values = new Array(emitters.length);\n  let called = 0;\n  const allCalled = Math.pow(2, emitters.length) - 1;\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      values[index] = value;\n      called = called | bit;\n      if (called === allCalled) {\n        publish(innerSubject, values);\n      }\n    });\n  });\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription(values);\n        }\n        return subscribe(innerSubject, subscription);\n      case RESET:\n        return reset(innerSubject);\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction system(constructor, dependencies = [], { singleton } = { singleton: true }) {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton\n  };\n}\nconst id = () => Symbol();\nfunction init(systemSpec) {\n  const singletons = /* @__PURE__ */ new Map();\n  const _init = ({ id: id2, constructor, dependencies, singleton }) => {\n    if (singleton && singletons.has(id2)) {\n      return singletons.get(id2);\n    }\n    const system2 = constructor(dependencies.map((e) => _init(e)));\n    if (singleton) {\n      singletons.set(id2, system2);\n    }\n    return system2;\n  };\n  return _init(systemSpec);\n}\nfunction omit(keys, obj) {\n  const result = {};\n  const index = {};\n  let idx = 0;\n  const len = keys.length;\n  while (idx < len) {\n    index[keys[idx]] = 1;\n    idx += 1;\n  }\n  for (const prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n}\nconst useIsomorphicLayoutEffect$2 = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction systemToComponent(systemSpec, map2, Root) {\n  const requiredPropNames = Object.keys(map2.required || {});\n  const optionalPropNames = Object.keys(map2.optional || {});\n  const methodNames = Object.keys(map2.methods || {});\n  const eventNames = Object.keys(map2.events || {});\n  const Context = React.createContext({});\n  function applyPropsToSystem(system2, props) {\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], false);\n    }\n    for (const requiredPropName of requiredPropNames) {\n      const stream2 = system2[map2.required[requiredPropName]];\n      publish(stream2, props[requiredPropName]);\n    }\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream2 = system2[map2.optional[optionalPropName]];\n        publish(stream2, props[optionalPropName]);\n      }\n    }\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], true);\n    }\n  }\n  function buildMethods(system2) {\n    return methodNames.reduce((acc, methodName) => {\n      acc[methodName] = (value) => {\n        const stream2 = system2[map2.methods[methodName]];\n        publish(stream2, value);\n      };\n      return acc;\n    }, {});\n  }\n  function buildEventHandlers(system2) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system2[map2.events[eventName]]);\n      return handlers;\n    }, {});\n  }\n  const Component = React.forwardRef((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren;\n    const [system2] = React.useState(() => {\n      return tap(init(systemSpec), (system22) => applyPropsToSystem(system22, props));\n    });\n    const [handlers] = React.useState(curry1to0(buildEventHandlers, system2));\n    useIsomorphicLayoutEffect$2(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName]);\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset);\n      };\n    }, [props, handlers, system2]);\n    useIsomorphicLayoutEffect$2(() => {\n      applyPropsToSystem(system2, props);\n    });\n    React.useImperativeHandle(ref, always(buildMethods(system2)));\n    return React.createElement(\n      Context.Provider,\n      { value: system2 },\n      Root ? React.createElement(\n        Root,\n        omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n        children\n      ) : children\n    );\n  });\n  const usePublisher2 = (key) => {\n    return React.useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]);\n  };\n  const useEmitterValue2 = (key) => {\n    const system2 = React.useContext(Context);\n    const source = system2[key];\n    const [value, setValue] = React.useState(curry1to0(getValue, source));\n    useIsomorphicLayoutEffect$2(\n      () => subscribe(source, (next) => {\n        if (next !== value) {\n          setValue(always(next));\n        }\n      }),\n      [source, value]\n    );\n    return value;\n  };\n  const useEmitter2 = (key, callback) => {\n    const context = React.useContext(Context);\n    const source = context[key];\n    useIsomorphicLayoutEffect$2(() => subscribe(source, callback), [callback, source]);\n  };\n  return {\n    Component,\n    usePublisher: usePublisher2,\n    useEmitterValue: useEmitterValue2,\n    useEmitter: useEmitter2\n  };\n}\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nconst useIsomorphicLayoutEffect$1 = useIsomorphicLayoutEffect;\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel2[LogLevel2[\"INFO\"] = 1] = \"INFO\";\n  LogLevel2[LogLevel2[\"WARN\"] = 2] = \"WARN\";\n  LogLevel2[LogLevel2[\"ERROR\"] = 3] = \"ERROR\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CONSOLE_METHOD_MAP = {\n  [\n    0\n    /* DEBUG */\n  ]: \"debug\",\n  [\n    1\n    /* INFO */\n  ]: \"log\",\n  [\n    2\n    /* WARN */\n  ]: \"warn\",\n  [\n    3\n    /* ERROR */\n  ]: \"error\"\n};\nconst getGlobalThis = () => typeof globalThis === \"undefined\" ? window : globalThis;\nconst loggerSystem = system(\n  () => {\n    const logLevel = statefulStream(\n      3\n      /* ERROR */\n    );\n    const log = statefulStream((label, message, level = 1) => {\n      var _a;\n      const currentLevel = (_a = getGlobalThis()[\"VIRTUOSO_LOG_LEVEL\"]) != null ? _a : getValue(logLevel);\n      if (level >= currentLevel) {\n        console[CONSOLE_METHOD_MAP[level]](\n          \"%creact-virtuoso: %c%s %o\",\n          \"color: #0253b3; font-weight: bold\",\n          \"color: initial\",\n          label,\n          message\n        );\n      }\n    });\n    return {\n      log,\n      logLevel\n    };\n  },\n  [],\n  { singleton: true }\n);\nfunction useSizeWithElRef(callback, enabled = true) {\n  const ref = React.useRef(null);\n  let callbackRef = (_el) => {\n  };\n  if (typeof ResizeObserver !== \"undefined\") {\n    const observer = React.useMemo(() => {\n      return new ResizeObserver((entries) => {\n        const element = entries[0].target;\n        if (element.offsetParent !== null) {\n          callback(element);\n        }\n      });\n    }, [callback]);\n    callbackRef = (elRef) => {\n      if (elRef && enabled) {\n        observer.observe(elRef);\n        ref.current = elRef;\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n        ref.current = null;\n      }\n    };\n  }\n  return { ref, callbackRef };\n}\nfunction useSize(callback, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef;\n}\nfunction useChangedListContentsSizes(callback, itemSize, enabled, scrollContainerStateCallback, log, gap, customScrollParent) {\n  const memoedCallback = React.useCallback(\n    (el) => {\n      const ranges = getChangedChildSizes(el.children, itemSize, \"offsetHeight\", log);\n      let scrollableElement = el.parentElement;\n      while (!scrollableElement.dataset[\"virtuosoScroller\"]) {\n        scrollableElement = scrollableElement.parentElement;\n      }\n      const windowScrolling = scrollableElement.lastElementChild.dataset[\"viewportType\"] === \"window\";\n      const scrollTop = customScrollParent ? customScrollParent.scrollTop : windowScrolling ? window.pageYOffset || document.documentElement.scrollTop : scrollableElement.scrollTop;\n      const scrollHeight = customScrollParent ? customScrollParent.scrollHeight : windowScrolling ? document.documentElement.scrollHeight : scrollableElement.scrollHeight;\n      const viewportHeight = customScrollParent ? customScrollParent.offsetHeight : windowScrolling ? window.innerHeight : scrollableElement.offsetHeight;\n      scrollContainerStateCallback({\n        scrollTop: Math.max(scrollTop, 0),\n        scrollHeight,\n        viewportHeight\n      });\n      gap == null ? void 0 : gap(resolveGapValue$1(\"row-gap\", getComputedStyle(el).rowGap, log));\n      if (ranges !== null) {\n        callback(ranges);\n      }\n    },\n    [callback, itemSize, log, gap, customScrollParent, scrollContainerStateCallback]\n  );\n  return useSizeWithElRef(memoedCallback, enabled);\n}\nfunction getChangedChildSizes(children, itemSize, field, log) {\n  const length = children.length;\n  if (length === 0) {\n    return null;\n  }\n  const results = [];\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i);\n    if (!child || child.dataset.index === void 0) {\n      continue;\n    }\n    const index = parseInt(child.dataset.index);\n    const knownSize = parseFloat(child.dataset.knownSize);\n    const size = itemSize(child, field);\n    if (size === 0) {\n      log(\"Zero-sized element, this should not happen\", { child }, LogLevel.ERROR);\n    }\n    if (size === knownSize) {\n      continue;\n    }\n    const lastResult = results[results.length - 1];\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size });\n    } else {\n      results[results.length - 1].endIndex++;\n    }\n  }\n  return results;\n}\nfunction resolveGapValue$1(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nfunction correctItemSize(el, dimension) {\n  return Math.round(el.getBoundingClientRect()[dimension]);\n}\nfunction approximatelyEqual(num1, num2) {\n  return Math.abs(num1 - num2) < 1.01;\n}\nfunction useScrollTop(scrollContainerStateCallback, smoothScrollTargetReached, scrollerElement, scrollerRefCallback = noop, customScrollParent) {\n  const scrollerRef = React.useRef(null);\n  const scrollTopTarget = React.useRef(null);\n  const timeoutRef = React.useRef(null);\n  const handler = React.useCallback(\n    (ev) => {\n      const el = ev.target;\n      const windowScroll = el === window || el === document;\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop;\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight;\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight;\n      const call2 = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight\n        });\n      };\n      if (ev.suppressFlushSync) {\n        call2();\n      } else {\n        ReactDOM.flushSync(call2);\n      }\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null;\n          smoothScrollTargetReached(true);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n            timeoutRef.current = null;\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  );\n  React.useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current;\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current);\n    handler({ target: localRef, suppressFlushSync: true });\n    localRef.addEventListener(\"scroll\", handler, { passive: true });\n    return () => {\n      scrollerRefCallback(null);\n      localRef.removeEventListener(\"scroll\", handler);\n    };\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent]);\n  function scrollToCallback(location) {\n    const scrollerElement2 = scrollerRef.current;\n    if (!scrollerElement2 || \"offsetHeight\" in scrollerElement2 && scrollerElement2.offsetHeight === 0) {\n      return;\n    }\n    const isSmooth = location.behavior === \"smooth\";\n    let offsetHeight;\n    let scrollHeight;\n    let scrollTop;\n    if (scrollerElement2 === window) {\n      scrollHeight = Math.max(correctItemSize(document.documentElement, \"height\"), document.documentElement.scrollHeight);\n      offsetHeight = window.innerHeight;\n      scrollTop = document.documentElement.scrollTop;\n    } else {\n      scrollHeight = scrollerElement2.scrollHeight;\n      offsetHeight = correctItemSize(scrollerElement2, \"height\");\n      scrollTop = scrollerElement2.scrollTop;\n    }\n    const maxScrollTop = scrollHeight - offsetHeight;\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top), 0));\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight });\n      if (isSmooth) {\n        smoothScrollTargetReached(true);\n      }\n      return;\n    }\n    if (isSmooth) {\n      scrollTopTarget.current = location.top;\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null;\n        scrollTopTarget.current = null;\n        smoothScrollTargetReached(true);\n      }, 1e3);\n    } else {\n      scrollTopTarget.current = null;\n    }\n    scrollerElement2.scrollTo(location);\n  }\n  function scrollByCallback(location) {\n    scrollerRef.current.scrollBy(location);\n  }\n  return { scrollerRef, scrollByCallback, scrollToCallback };\n}\nconst domIOSystem = system(\n  () => {\n    const scrollContainerState = stream();\n    const scrollTop = stream();\n    const deviation = statefulStream(0);\n    const smoothScrollTargetReached = stream();\n    const statefulScrollTop = statefulStream(0);\n    const viewportHeight = stream();\n    const scrollHeight = stream();\n    const headerHeight = statefulStream(0);\n    const fixedHeaderHeight = statefulStream(0);\n    const fixedFooterHeight = statefulStream(0);\n    const footerHeight = statefulStream(0);\n    const scrollTo = stream();\n    const scrollBy = stream();\n    const scrollingInProgress = statefulStream(false);\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollTop: scrollTop2 }) => scrollTop2)\n      ),\n      scrollTop\n    );\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollHeight: scrollHeight2 }) => scrollHeight2)\n      ),\n      scrollHeight\n    );\n    connect(scrollTop, statefulScrollTop);\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      // signals\n      scrollTo,\n      scrollBy,\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress\n    };\n  },\n  [],\n  { singleton: true }\n);\nconst NIL_NODE = { lvl: 0 };\nfunction newAANode(k, v, lvl, l = NIL_NODE, r = NIL_NODE) {\n  return { k, v, lvl, l, r };\n}\nfunction empty(node) {\n  return node === NIL_NODE;\n}\nfunction newTree() {\n  return NIL_NODE;\n}\nfunction remove(node, key) {\n  if (empty(node))\n    return NIL_NODE;\n  const { k, l, r } = node;\n  if (key === k) {\n    if (empty(l)) {\n      return r;\n    } else if (empty(r)) {\n      return l;\n    } else {\n      const [lastKey, lastValue] = last(l);\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }));\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }));\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }));\n  }\n}\nfunction find(node, key) {\n  if (empty(node)) {\n    return;\n  }\n  if (key === node.k) {\n    return node.v;\n  } else if (key < node.k) {\n    return find(node.l, key);\n  } else {\n    return find(node.r, key);\n  }\n}\nfunction findMaxKeyValue(node, value, field = \"k\") {\n  if (empty(node)) {\n    return [-Infinity, void 0];\n  }\n  if (Number(node[field]) === value) {\n    return [node.k, node.v];\n  }\n  if (Number(node[field]) < value) {\n    const r = findMaxKeyValue(node.r, value, field);\n    if (r[0] === -Infinity) {\n      return [node.k, node.v];\n    } else {\n      return r;\n    }\n  }\n  return findMaxKeyValue(node.l, value, field);\n}\nfunction insert(node, k, v) {\n  if (empty(node)) {\n    return newAANode(k, v, 1);\n  }\n  if (k === node.k) {\n    return clone(node, { k, v });\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }));\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }));\n  }\n}\nfunction walkWithin(node, start, end) {\n  if (empty(node)) {\n    return [];\n  }\n  const { k, v, l, r } = node;\n  let result = [];\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end));\n  }\n  if (k >= start && k <= end) {\n    result.push({ k, v });\n  }\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end));\n  }\n  return result;\n}\nfunction walk(node) {\n  if (empty(node)) {\n    return [];\n  }\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)];\n}\nfunction last(node) {\n  return empty(node.r) ? [node.k, node.v] : last(node.r);\n}\nfunction deleteLast(node) {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }));\n}\nfunction clone(node, args) {\n  return newAANode(\n    args.k !== void 0 ? args.k : node.k,\n    args.v !== void 0 ? args.v : node.v,\n    args.lvl !== void 0 ? args.lvl : node.lvl,\n    args.l !== void 0 ? args.l : node.l,\n    args.r !== void 0 ? args.r : node.r\n  );\n}\nfunction isSingle(node) {\n  return empty(node) || node.lvl > node.r.lvl;\n}\nfunction rebalance(node) {\n  return split(skew(node));\n}\nfunction adjust(node) {\n  const { l, r, lvl } = node;\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node;\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1\n          }),\n          lvl\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l;\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl;\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  }\n}\nfunction rangesWithin(node, startIndex, endIndex) {\n  if (empty(node)) {\n    return [];\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0];\n  return toRanges(walkWithin(node, adjustedStart, endIndex));\n}\nfunction arrayToRanges(items, parser) {\n  const length = items.length;\n  if (length === 0) {\n    return [];\n  }\n  let { index: start, value } = parser(items[0]);\n  const result = [];\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i]);\n    result.push({ start, end: nextIndex - 1, value });\n    start = nextIndex;\n    value = nextValue;\n  }\n  result.push({ start, end: Infinity, value });\n  return result;\n}\nfunction toRanges(nodes) {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }));\n}\nfunction split(node) {\n  const { r, lvl } = node;\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node;\n}\nfunction skew(node) {\n  const { l } = node;\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node;\n}\nfunction findIndexOfClosestSmallerOrEqual(items, value, comparator, start = 0) {\n  let end = items.length - 1;\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2);\n    const item = items[index];\n    const match = comparator(item, value);\n    if (match === 0) {\n      return index;\n    }\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1;\n      }\n      end = index - 1;\n    } else {\n      if (end === start) {\n        return index;\n      }\n      start = index + 1;\n    }\n  }\n  throw new Error(`Failed binary finding record in array - ${items.join(\",\")}, searched for ${value}`);\n}\nfunction findClosestSmallerOrEqual(items, value, comparator) {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)];\n}\nfunction findRange(items, startValue, endValue, comparator) {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator);\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex);\n  return items.slice(startIndex, endIndex + 1);\n}\nconst recalcSystem = system(\n  () => {\n    const recalcInProgress = statefulStream(false);\n    return { recalcInProgress };\n  },\n  [],\n  { singleton: true }\n);\nfunction rangeIncludes(refRange) {\n  const { size, startIndex, endIndex } = refRange;\n  return (range) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size;\n  };\n}\nfunction affectedGroupCount(offset, groupIndices) {\n  let recognizedOffsetItems = 0;\n  let groupIndex = 0;\n  while (recognizedOffsetItems < offset) {\n    recognizedOffsetItems += groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n    groupIndex++;\n  }\n  const offsetIsExact = recognizedOffsetItems === offset;\n  return groupIndex - (offsetIsExact ? 0 : 1);\n}\nfunction insertRanges(sizeTree, ranges) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity;\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range;\n    syncStart = Math.min(syncStart, startIndex);\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size);\n      continue;\n    }\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1);\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue;\n    }\n    let firstPassDone = false;\n    let shouldInsert = false;\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size;\n        firstPassDone = true;\n      } else {\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart);\n        }\n      }\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue);\n        }\n      }\n    }\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size);\n    }\n  }\n  return [sizeTree, syncStart];\n}\nfunction initialSizeState() {\n  return {\n    offsetTree: [],\n    sizeTree: newTree(),\n    groupOffsetTree: newTree(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: []\n  };\n}\nfunction indexComparator({ index: itemIndex }, index) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1;\n}\nfunction offsetComparator({ offset: itemOffset }, offset) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1;\n}\nfunction offsetPointParser(point) {\n  return { index: point.index, value: point };\n}\nfunction rangesWithinOffsets(tree, startOffset, endOffset, minStartIndex = 0) {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset);\n  }\n  return arrayToRanges(findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser);\n}\nfunction createOffsetTree(prevOffsetTree, syncStart, sizeTree, gap) {\n  let offsetTree = prevOffsetTree;\n  let prevIndex = 0;\n  let prevSize = 0;\n  let prevOffset = 0;\n  let startIndex = 0;\n  if (syncStart !== 0) {\n    startIndex = findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator);\n    const offsetInfo = offsetTree[startIndex];\n    prevOffset = offsetInfo.offset;\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1);\n    prevIndex = kv[0];\n    prevSize = kv[1];\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1;\n    }\n    offsetTree = offsetTree.slice(0, startIndex + 1);\n  } else {\n    offsetTree = [];\n  }\n  for (const { start: startIndex2, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex2 - prevIndex;\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap;\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex2\n    });\n    prevIndex = startIndex2;\n    prevOffset = aOffset;\n    prevSize = value;\n  }\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize\n  };\n}\nfunction sizeStateReducer(state, [ranges, groupIndices, log, gap]) {\n  if (ranges.length > 0) {\n    log(\"received item sizes\", ranges, LogLevel.DEBUG);\n  }\n  const sizeTree = state.sizeTree;\n  let newSizeTree = sizeTree;\n  let syncStart = 0;\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size;\n    const itemSize = ranges[1].size;\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize);\n    }, newSizeTree);\n  } else {\n    [newSizeTree, syncStart] = insertRanges(newSizeTree, ranges);\n  }\n  if (newSizeTree === sizeTree) {\n    return state;\n  }\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap);\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap));\n    }, newTree()),\n    groupIndices\n  };\n}\nfunction offsetOf(index, tree, gap) {\n  if (tree.length === 0) {\n    return 0;\n  }\n  const { offset, index: startIndex, size } = findClosestSmallerOrEqual(tree, index, indexComparator);\n  const itemCount = index - startIndex;\n  const top = size * itemCount + (itemCount - 1) * gap + offset;\n  return top > 0 ? top + gap : top;\n}\nfunction isGroupLocation(location) {\n  return typeof location.groupIndex !== \"undefined\";\n}\nfunction originalIndexFromLocation(location, sizes, lastIndex) {\n  if (isGroupLocation(location)) {\n    return sizes.groupIndices[location.groupIndex] + 1;\n  } else {\n    const numericIndex = location.index === \"LAST\" ? lastIndex : location.index;\n    let result = originalIndexFromItemIndex(numericIndex, sizes);\n    result = Math.max(0, result, Math.min(lastIndex, result));\n    return result;\n  }\n}\nfunction originalIndexFromItemIndex(itemIndex, sizes) {\n  if (!hasGroups(sizes)) {\n    return itemIndex;\n  }\n  let groupOffset = 0;\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++;\n  }\n  return itemIndex + groupOffset;\n}\nfunction hasGroups(sizes) {\n  return !empty(sizes.groupOffsetTree);\n}\nfunction sizeTreeToRanges(sizeTree) {\n  return walk(sizeTree).map(({ k: startIndex, v: size }, index, sizeArray) => {\n    const nextSize = sizeArray[index + 1];\n    const endIndex = nextSize ? nextSize.k - 1 : Infinity;\n    return { startIndex, endIndex, size };\n  });\n}\nconst SIZE_MAP = {\n  offsetHeight: \"height\",\n  offsetWidth: \"width\"\n};\nconst sizeSystem = system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = stream();\n    const totalCount = stream();\n    const statefulTotalCount = statefulStreamFromEmitter(totalCount, 0);\n    const unshiftWith = stream();\n    const shiftWith = stream();\n    const firstItemIndex = statefulStream(0);\n    const groupIndices = statefulStream([]);\n    const fixedItemSize = statefulStream(void 0);\n    const defaultItemSize = statefulStream(void 0);\n    const itemSize = statefulStream((el, field) => correctItemSize(el, SIZE_MAP[field]));\n    const data = statefulStream(void 0);\n    const gap = statefulStream(0);\n    const initial = initialSizeState();\n    const sizes = statefulStreamFromEmitter(\n      pipe(sizeRanges, withLatestFrom(groupIndices, log, gap), scan(sizeStateReducer, initial), distinctUntilChanged()),\n      initial\n    );\n    const prevGroupIndices = statefulStreamFromEmitter(\n      pipe(\n        groupIndices,\n        distinctUntilChanged(),\n        scan((prev, curr) => ({ prev: prev.current, current: curr }), {\n          prev: [],\n          current: []\n        }),\n        map(({ prev }) => prev)\n      ),\n      []\n    );\n    connect(\n      pipe(\n        groupIndices,\n        filter((indexes) => indexes.length > 0),\n        withLatestFrom(sizes, gap),\n        map(([groupIndices2, sizes2, gap2]) => {\n          const groupOffsetTree = groupIndices2.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes2.offsetTree, gap2) || idx);\n          }, newTree());\n          return {\n            ...sizes2,\n            groupIndices: groupIndices2,\n            groupOffsetTree\n          };\n        })\n      ),\n      sizes\n    );\n    connect(\n      pipe(\n        totalCount,\n        withLatestFrom(sizes),\n        filter(([totalCount2, { lastIndex }]) => {\n          return totalCount2 < lastIndex;\n        }),\n        map(([totalCount2, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount2,\n              endIndex: lastIndex,\n              size: lastSize\n            }\n          ];\n        })\n      ),\n      sizeRanges\n    );\n    connect(fixedItemSize, defaultItemSize);\n    const trackItemSizes = statefulStreamFromEmitter(\n      pipe(\n        fixedItemSize,\n        map((size) => size === void 0)\n      ),\n      true\n    );\n    connect(\n      pipe(\n        defaultItemSize,\n        filter((value) => {\n          return value !== void 0 && empty(getValue(sizes).sizeTree);\n        }),\n        map((size) => [{ startIndex: 0, endIndex: 0, size }])\n      ),\n      sizeRanges\n    );\n    const listRefresh = streamFromEmitter(\n      pipe(\n        sizeRanges,\n        withLatestFrom(sizes),\n        scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes\n            };\n          },\n          { changed: false, sizes: initial }\n        ),\n        map((value) => value.changed)\n      )\n    );\n    subscribe(\n      pipe(\n        firstItemIndex,\n        scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next };\n          },\n          { diff: 0, prev: 0 }\n        ),\n        map((val) => val.diff)\n      ),\n      (offset) => {\n        const { groupIndices: groupIndices2 } = getValue(sizes);\n        if (offset > 0) {\n          publish(recalcInProgress, true);\n          publish(unshiftWith, offset + affectedGroupCount(offset, groupIndices2));\n        } else if (offset < 0) {\n          const prevGroupIndicesValue = getValue(prevGroupIndices);\n          if (prevGroupIndicesValue.length > 0) {\n            offset -= affectedGroupCount(-offset, prevGroupIndicesValue);\n          }\n          publish(shiftWith, offset);\n        }\n      }\n    );\n    subscribe(pipe(firstItemIndex, withLatestFrom(log)), ([index, log2]) => {\n      if (index < 0) {\n        log2(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        );\n      }\n    });\n    const beforeUnshiftWith = streamFromEmitter(unshiftWith);\n    connect(\n      pipe(\n        unshiftWith,\n        withLatestFrom(sizes),\n        map(([unshiftWith2, sizes2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          const initialRanges = [];\n          const defaultSize = sizes2.lastSize;\n          if (groupedMode) {\n            const firstGroupSize = find(sizes2.sizeTree, 0);\n            let prependedGroupItemsCount = 0;\n            let groupIndex = 0;\n            while (prependedGroupItemsCount < unshiftWith2) {\n              const theGroupIndex = sizes2.groupIndices[groupIndex];\n              const groupItemCount = sizes2.groupIndices.length === groupIndex + 1 ? Infinity : sizes2.groupIndices[groupIndex + 1] - theGroupIndex - 1;\n              initialRanges.push({\n                startIndex: theGroupIndex,\n                endIndex: theGroupIndex,\n                size: firstGroupSize\n              });\n              initialRanges.push({\n                startIndex: theGroupIndex + 1,\n                endIndex: theGroupIndex + 1 + groupItemCount - 1,\n                size: defaultSize\n              });\n              groupIndex++;\n              prependedGroupItemsCount += groupItemCount + 1;\n            }\n            const sizeTreeKV = walk(sizes2.sizeTree);\n            const firstGroupIsExpanded = prependedGroupItemsCount !== unshiftWith2;\n            if (firstGroupIsExpanded) {\n              sizeTreeKV.shift();\n            }\n            return sizeTreeKV.reduce(\n              (acc, { k: index, v: size }) => {\n                let ranges = acc.ranges;\n                if (acc.prevSize !== 0) {\n                  ranges = [\n                    ...acc.ranges,\n                    {\n                      startIndex: acc.prevIndex,\n                      endIndex: index + unshiftWith2 - 1,\n                      size: acc.prevSize\n                    }\n                  ];\n                }\n                return {\n                  ranges,\n                  prevIndex: index + unshiftWith2,\n                  prevSize: size\n                };\n              },\n              {\n                ranges: initialRanges,\n                prevIndex: unshiftWith2,\n                prevSize: 0\n              }\n            ).ranges;\n          }\n          return walk(sizes2.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith2 - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith2,\n                prevSize: size\n              };\n            },\n            {\n              ranges: [],\n              prevIndex: 0,\n              prevSize: defaultSize\n            }\n          ).ranges;\n        })\n      ),\n      sizeRanges\n    );\n    const shiftWithOffset = streamFromEmitter(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, { offsetTree }, gap2]) => {\n          const newFirstItemIndex = -shiftWith2;\n          return offsetOf(newFirstItemIndex, offsetTree, gap2);\n        })\n      )\n    );\n    connect(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, sizes2, gap2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          if (groupedMode) {\n            if (empty(sizes2.sizeTree)) {\n              return sizes2;\n            }\n            let newSizeTree = newTree();\n            const prevGroupIndicesValue = getValue(prevGroupIndices);\n            let removedItemsCount = 0;\n            let groupIndex = 0;\n            let groupOffset = 0;\n            while (removedItemsCount < -shiftWith2) {\n              groupOffset = prevGroupIndicesValue[groupIndex];\n              const groupItemCount = prevGroupIndicesValue[groupIndex + 1] - groupOffset - 1;\n              groupIndex++;\n              removedItemsCount += groupItemCount + 1;\n            }\n            newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newSizeTree);\n            const aGroupIsShrunk = removedItemsCount !== -shiftWith2;\n            if (aGroupIsShrunk) {\n              const firstGroupSize = find(sizes2.sizeTree, groupOffset);\n              newSizeTree = insert(newSizeTree, 0, firstGroupSize);\n              const nextItemSize = findMaxKeyValue(sizes2.sizeTree, -shiftWith2 + 1)[1];\n              newSizeTree = insert(newSizeTree, 1, nextItemSize);\n            }\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          } else {\n            const newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newTree());\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          }\n        })\n      ),\n      sizes\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize\n    };\n  },\n  tup(loggerSystem, recalcSystem),\n  { singleton: true }\n);\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== \"undefined\" && \"scrollBehavior\" in document.documentElement.style;\nfunction normalizeIndexLocation(location) {\n  const result = typeof location === \"number\" ? { index: location } : location;\n  if (!result.align) {\n    result.align = \"start\";\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = \"auto\";\n  }\n  if (!result.offset) {\n    result.offset = 0;\n  }\n  return result;\n}\nconst scrollToIndexSystem = system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight\n    },\n    { log }\n  ]) => {\n    const scrollToIndex = stream();\n    const topListHeight = statefulStream(0);\n    let unsubscribeNextListRefresh = null;\n    let cleartTimeoutRef = null;\n    let unsubscribeListRefresh = null;\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh();\n        unsubscribeNextListRefresh = null;\n      }\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh();\n        unsubscribeListRefresh = null;\n      }\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef);\n        cleartTimeoutRef = null;\n      }\n      publish(scrollingInProgress, false);\n    }\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        map(\n          ([\n            [location, sizes2, viewportHeight2, totalCount2, topListHeight2, headerHeight2, footerHeight2, log2],\n            gap2,\n            fixedHeaderHeight2,\n            fixedFooterHeight2\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location);\n            const { align, behavior, offset } = normalLocation;\n            const lastIndex = totalCount2 - 1;\n            const index = originalIndexFromLocation(normalLocation, sizes2, lastIndex);\n            let top = offsetOf(index, sizes2.offsetTree, gap2) + headerHeight2;\n            if (align === \"end\") {\n              top += fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2;\n              if (index === lastIndex) {\n                top += footerHeight2;\n              }\n            } else if (align === \"center\") {\n              top += (fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2) / 2;\n            } else {\n              top -= topListHeight2;\n            }\n            if (offset) {\n              top += offset;\n            }\n            const retry = (listChanged) => {\n              cleanup();\n              if (listChanged) {\n                log2(\"retrying to scroll to\", { location }, LogLevel.DEBUG);\n                publish(scrollToIndex, location);\n              } else {\n                log2(\"list did not change, scroll successful\", {}, LogLevel.DEBUG);\n              }\n            };\n            cleanup();\n            if (behavior === \"smooth\") {\n              let listChanged = false;\n              unsubscribeListRefresh = subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed;\n              });\n              unsubscribeNextListRefresh = handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged);\n              });\n            } else {\n              unsubscribeNextListRefresh = handleNext(pipe(listRefresh, watchChangesFor(150)), retry);\n            }\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup();\n            }, 1200);\n            publish(scrollingInProgress, true);\n            log2(\"scrolling from index to\", { index, top, behavior }, LogLevel.DEBUG);\n            return { top, behavior };\n          }\n        )\n      ),\n      scrollTo\n    );\n    return {\n      scrollToIndex,\n      topListHeight\n    };\n  },\n  tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n);\nfunction watchChangesFor(limit) {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false);\n    }, limit);\n    return (value) => {\n      if (value) {\n        done(true);\n        clearTimeout(timeoutRef);\n      }\n    };\n  };\n}\nconst UP = \"up\";\nconst DOWN = \"down\";\nconst NONE$1 = \"none\";\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: \"NOT_SHOWING_LAST_ITEM\",\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0\n  }\n};\nconst DEFAULT_AT_TOP_THRESHOLD = 0;\nconst stateFlagsSystem = system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = statefulStream(false);\n  const isAtTop = statefulStream(true);\n  const atBottomStateChange = stream();\n  const atTopStateChange = stream();\n  const atBottomThreshold = statefulStream(4);\n  const atTopThreshold = statefulStream(DEFAULT_AT_TOP_THRESHOLD);\n  const isScrolling = statefulStreamFromEmitter(\n    pipe(\n      merge(pipe(duc(scrollTop), skip(1), mapTo(true)), pipe(duc(scrollTop), skip(1), mapTo(false), debounceTime(100))),\n      distinctUntilChanged()\n    ),\n    false\n  );\n  const isScrollingBy = statefulStreamFromEmitter(\n    pipe(merge(pipe(scrollBy, mapTo(true)), pipe(scrollBy, mapTo(false), debounceTime(200))), distinctUntilChanged()),\n    false\n  );\n  connect(\n    pipe(\n      combineLatest(duc(scrollTop), duc(atTopThreshold)),\n      map(([top, atTopThreshold2]) => top <= atTopThreshold2),\n      distinctUntilChanged()\n    ),\n    isAtTop\n  );\n  connect(pipe(isAtTop, throttleTime(50)), atTopStateChange);\n  const atBottomState = streamFromEmitter(\n    pipe(\n      combineLatest(scrollContainerState, duc(viewportHeight), duc(headerHeight), duc(footerHeight), duc(atBottomThreshold)),\n      scan((current, [{ scrollTop: scrollTop2, scrollHeight }, viewportHeight2, _headerHeight, _footerHeight, atBottomThreshold2]) => {\n        const isAtBottom2 = scrollTop2 + viewportHeight2 - scrollHeight > -atBottomThreshold2;\n        const state = {\n          viewportHeight: viewportHeight2,\n          scrollTop: scrollTop2,\n          scrollHeight\n        };\n        if (isAtBottom2) {\n          let atBottomBecause;\n          let scrollTopDelta;\n          if (scrollTop2 > current.state.scrollTop) {\n            atBottomBecause = \"SCROLLED_DOWN\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2;\n          } else {\n            atBottomBecause = \"SIZE_DECREASED\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2 || current.scrollTopDelta;\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta\n          };\n        }\n        let notAtBottomBecause;\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = \"SIZE_INCREASED\";\n        } else if (viewportHeight2 < current.state.viewportHeight) {\n          notAtBottomBecause = \"VIEWPORT_HEIGHT_DECREASING\";\n        } else if (scrollTop2 < current.state.scrollTop) {\n          notAtBottomBecause = \"SCROLLING_UPWARDS\";\n        } else {\n          notAtBottomBecause = \"NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM\";\n        }\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state\n        };\n      }, INITIAL_BOTTOM_STATE),\n      distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom;\n      })\n    )\n  );\n  const lastJumpDueToItemResize = statefulStreamFromEmitter(\n    pipe(\n      scrollContainerState,\n      scan(\n        (current, { scrollTop: scrollTop2, scrollHeight, viewportHeight: viewportHeight2 }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop2 + viewportHeight2) < 1;\n            if (current.scrollTop !== scrollTop2 && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: current.scrollTop - scrollTop2,\n                changed: true\n              };\n            } else {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: 0,\n                changed: true\n              };\n            }\n          } else {\n            return {\n              scrollTop: scrollTop2,\n              scrollHeight,\n              jump: 0,\n              changed: false\n            };\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      filter((value) => value.changed),\n      map((value) => value.jump)\n    ),\n    0\n  );\n  connect(\n    pipe(\n      atBottomState,\n      map((state) => state.atBottom)\n    ),\n    isAtBottom\n  );\n  connect(pipe(isAtBottom, throttleTime(50)), atBottomStateChange);\n  const scrollDirection = statefulStream(DOWN);\n  connect(\n    pipe(\n      scrollContainerState,\n      map(({ scrollTop: scrollTop2 }) => scrollTop2),\n      distinctUntilChanged(),\n      scan(\n        (acc, scrollTop2) => {\n          if (getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop2 };\n          }\n          return { direction: scrollTop2 < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop2 };\n        },\n        { direction: DOWN, prevScrollTop: 0 }\n      ),\n      map((value) => value.direction)\n    ),\n    scrollDirection\n  );\n  connect(pipe(scrollContainerState, throttleTime(50), mapTo(NONE$1)), scrollDirection);\n  const scrollVelocity = statefulStream(0);\n  connect(\n    pipe(\n      isScrolling,\n      filter((value) => !value),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      mapTo(0)\n    ),\n    scrollVelocity\n  );\n  connect(\n    pipe(\n      scrollTop,\n      throttleTime(100),\n      withLatestFrom(isScrolling),\n      filter(([_, isScrolling2]) => !!isScrolling2),\n      scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  );\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize\n  };\n}, tup(domIOSystem));\nconst propsReadySystem = system(\n  ([{ log }]) => {\n    const propsReady = statefulStream(false);\n    const didMount = streamFromEmitter(\n      pipe(\n        propsReady,\n        filter((ready) => ready),\n        distinctUntilChanged()\n      )\n    );\n    subscribe(propsReady, (value) => {\n      value && getValue(log)(\"props updated\", {}, LogLevel.DEBUG);\n    });\n    return { propsReady, didMount };\n  },\n  tup(loggerSystem),\n  { singleton: true }\n);\nfunction skipFrames(frameCount, callback) {\n  if (frameCount == 0) {\n    callback();\n  } else {\n    requestAnimationFrame(() => skipFrames(frameCount - 1, callback));\n  }\n}\nfunction getInitialTopMostItemIndexNumber(location, totalCount) {\n  const lastIndex = totalCount - 1;\n  const index = typeof location === \"number\" ? location : location.index === \"LAST\" ? lastIndex : location.index;\n  return index;\n}\nconst initialTopMostItemIndexSystem = system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = statefulStream(true);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrollScheduled = statefulStream(false);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location),\n        mapTo(false)\n      ),\n      scrolledToInitialItem\n    );\n    subscribe(\n      pipe(\n        combineLatest(listRefresh, didMount),\n        withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize, scrollScheduled),\n        filter(([[, didMount2], scrolledToInitialItem2, { sizeTree }, defaultItemSize2, scrollScheduled2]) => {\n          return didMount2 && (!empty(sizeTree) || isDefined(defaultItemSize2)) && !scrolledToInitialItem2 && !scrollScheduled2;\n        }),\n        withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(3, () => {\n          handleNext(scrollTop, () => publish(scrolledToInitialItem, true));\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n      }\n    );\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n);\nfunction normalizeFollowOutput(follow) {\n  if (!follow) {\n    return false;\n  }\n  return follow === \"smooth\" ? \"smooth\" : \"auto\";\n}\nconst behaviorFromFollowOutput = (follow, isAtBottom) => {\n  if (typeof follow === \"function\") {\n    return normalizeFollowOutput(follow(isAtBottom));\n  }\n  return isAtBottom && normalizeFollowOutput(follow);\n};\nconst followOutputSystem = system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress }\n  ]) => {\n    const followOutput = statefulStream(false);\n    const autoscrollToBottom = stream();\n    let pendingScrollHandle = null;\n    function scrollToBottom(followOutputBehavior) {\n      publish(scrollToIndex, {\n        index: \"LAST\",\n        align: \"end\",\n        behavior: followOutputBehavior\n      });\n    }\n    subscribe(\n      pipe(\n        combineLatest(pipe(duc(totalCount), skip(1)), didMount),\n        withLatestFrom(duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        map(([[totalCount2, didMount2], followOutput2, isAtBottom2, scrolledToInitialItem2, scrollingInProgress2]) => {\n          let shouldFollow = didMount2 && scrolledToInitialItem2;\n          let followOutputBehavior = \"auto\";\n          if (shouldFollow) {\n            followOutputBehavior = behaviorFromFollowOutput(followOutput2, isAtBottom2 || scrollingInProgress2);\n            shouldFollow = shouldFollow && !!followOutputBehavior;\n          }\n          return { totalCount: totalCount2, shouldFollow, followOutputBehavior };\n        }),\n        filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount: totalCount2, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle();\n          pendingScrollHandle = null;\n        }\n        pendingScrollHandle = handleNext(listRefresh, () => {\n          getValue(log)(\"following output to \", { totalCount: totalCount2 }, LogLevel.DEBUG);\n          scrollToBottom(followOutputBehavior);\n          pendingScrollHandle = null;\n        });\n      }\n    );\n    function trapNextSizeIncrease(followOutput2) {\n      const cancel = handleNext(atBottomState, (state) => {\n        if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"SIZE_INCREASED\" && !pendingScrollHandle) {\n          getValue(log)(\"scrolling to bottom due to increased size\", {}, LogLevel.DEBUG);\n          scrollToBottom(\"auto\");\n        }\n      });\n      setTimeout(cancel, 100);\n    }\n    subscribe(\n      pipe(\n        combineLatest(duc(followOutput), totalCount, propsReady),\n        filter(([follow, , ready]) => follow && ready),\n        scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next };\n          },\n          { refreshed: false, value: 0 }\n        ),\n        filter(({ refreshed }) => refreshed),\n        withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput2]) => {\n        trapNextSizeIncrease(followOutput2 !== false);\n      }\n    );\n    subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(getValue(followOutput) !== false);\n    });\n    subscribe(combineLatest(duc(followOutput), atBottomState), ([followOutput2, state]) => {\n      if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"VIEWPORT_HEIGHT_DECREASING\") {\n        scrollToBottom(\"auto\");\n      }\n    });\n    return { followOutput, autoscrollToBottom };\n  },\n  tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n);\nfunction groupCountsToIndicesAndCount(counts) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount);\n      acc.totalCount += groupCount + 1;\n      return acc;\n    },\n    {\n      totalCount: 0,\n      groupIndices: []\n    }\n  );\n}\nconst groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream();\n  const topItemsIndexes = stream();\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)));\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.totalCount)\n    ),\n    totalCount\n  );\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.groupIndices)\n    ),\n    groupIndices\n  );\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes2]) => hasGroups(sizes2)),\n      map(([scrollTop2, state, headerHeight2]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop2 - headerHeight2, 0), \"v\")[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  );\n  return { groupCounts, topItemsIndexes };\n}, tup(sizeSystem, domIOSystem));\nfunction tupleComparator(prev, current) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1]);\n}\nfunction rangeComparator(prev, next) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex);\n}\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst NONE = \"none\";\nfunction getOverscan(overscan, end, direction) {\n  if (typeof overscan === \"number\") {\n    return direction === UP && end === TOP || direction === DOWN && end === BOTTOM ? overscan : 0;\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse;\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse;\n    }\n  }\n}\nfunction getViewportIncrease(value, end) {\n  return typeof value === \"number\" ? value : value[end] || 0;\n}\nconst sizeRangeSystem = system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = stream();\n    const topListHeight = statefulStream(0);\n    const increaseViewportBy = statefulStream(0);\n    const overscan = statefulStream(0);\n    const visibleRange = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          duc(scrollTop),\n          duc(viewportHeight),\n          duc(headerHeight),\n          duc(listBoundary, tupleComparator),\n          duc(overscan),\n          duc(topListHeight),\n          duc(fixedHeaderHeight),\n          duc(deviation),\n          duc(increaseViewportBy)\n        ),\n        map(\n          ([\n            scrollTop2,\n            viewportHeight2,\n            headerHeight2,\n            [listTop, listBottom],\n            overscan2,\n            topListHeight2,\n            fixedHeaderHeight2,\n            deviation2,\n            increaseViewportBy2\n          ]) => {\n            const top = scrollTop2 - deviation2;\n            const stickyHeaderHeight = topListHeight2 + fixedHeaderHeight2;\n            const headerVisible = Math.max(headerHeight2 - top, 0);\n            let direction = NONE;\n            const topViewportAddition = getViewportIncrease(increaseViewportBy2, TOP);\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy2, BOTTOM);\n            listTop -= deviation2;\n            listTop += headerHeight2 + fixedHeaderHeight2;\n            listBottom += headerHeight2 + fixedHeaderHeight2;\n            listBottom -= deviation2;\n            if (listTop > scrollTop2 + stickyHeaderHeight - topViewportAddition) {\n              direction = UP;\n            }\n            if (listBottom < scrollTop2 - headerVisible + viewportHeight2 + bottomViewportAddition) {\n              direction = DOWN;\n            }\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight2 - getOverscan(overscan2, TOP, direction) - topViewportAddition, 0),\n                top - headerVisible - fixedHeaderHeight2 + viewportHeight2 + getOverscan(overscan2, BOTTOM, direction) + bottomViewportAddition\n              ];\n            }\n            return null;\n          }\n        ),\n        filter((value) => value != null),\n        distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    );\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n      // output\n      visibleRange\n    };\n  },\n  tup(domIOSystem),\n  { singleton: true }\n);\nfunction probeItemSet(index, sizes, data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes);\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0];\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] }\n    ];\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }];\n}\nconst EMPTY_LIST_STATE = {\n  items: [],\n  topItems: [],\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0\n};\nfunction transposeItems(items, sizes, firstItemIndex) {\n  if (items.length === 0) {\n    return [];\n  }\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }));\n  }\n  const startIndex = items[0].index;\n  const endIndex = items[items.length - 1].index;\n  const transposedItems = [];\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex);\n  let currentRange = void 0;\n  let currentGroupIndex = 0;\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift();\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start);\n    }\n    let transposedItem;\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: \"group\",\n        index: currentGroupIndex\n      };\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex\n      };\n    }\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data\n    });\n  }\n  return transposedItems;\n}\nfunction buildListState(items, topItems, totalCount, gap, sizes, firstItemIndex) {\n  const { lastSize, lastOffset, lastIndex } = sizes;\n  let offsetTop = 0;\n  let bottom = 0;\n  if (items.length > 0) {\n    offsetTop = items[0].offset;\n    const lastItem = items[items.length - 1];\n    bottom = lastItem.offset + lastItem.size;\n  }\n  const itemCount = totalCount - lastIndex;\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap;\n  const top = offsetTop;\n  const offsetBottom = total - bottom;\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex\n  };\n}\nconst listStateSystem = system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem2,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress }\n  ]) => {\n    const topItemsIndexes = statefulStream([]);\n    const itemsRendered = stream();\n    connect(groupedListSystem2.topItemsIndexes, topItemsIndexes);\n    const listState = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          didMount,\n          recalcInProgress,\n          duc(visibleRange, tupleComparator),\n          duc(totalCount),\n          duc(sizes),\n          duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          duc(topItemsIndexes),\n          duc(firstItemIndex),\n          duc(gap),\n          data\n        ),\n        filter(([mount, recalcInProgress2, , totalCount2, , , , , , , data2]) => {\n          const dataChangeInProgress = data2 && data2.length !== totalCount2;\n          return mount && !recalcInProgress2 && !dataChangeInProgress;\n        }),\n        map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount2,\n            sizes2,\n            initialTopMostItemIndex2,\n            scrolledToInitialItem2,\n            topItemsIndexes2,\n            firstItemIndex2,\n            gap2,\n            data2\n          ]) => {\n            const sizesValue = sizes2;\n            const { sizeTree, offsetTree } = sizesValue;\n            if (totalCount2 === 0 || startOffset === 0 && endOffset === 0) {\n              return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n            }\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2), sizesValue, data2),\n                [],\n                totalCount2,\n                gap2,\n                sizesValue,\n                firstItemIndex2\n              );\n            }\n            const topItems = [];\n            if (topItemsIndexes2.length > 0) {\n              const startIndex = topItemsIndexes2[0];\n              const endIndex = topItemsIndexes2[topItemsIndexes2.length - 1];\n              let offset = 0;\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value;\n                const rangeStartIndex = Math.max(range.start, startIndex);\n                const rangeEndIndex = Math.min(range.end, endIndex);\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size;\n                }\n              }\n            }\n            if (!scrolledToInitialItem2) {\n              return buildListState([], topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n            }\n            const minStartIndex = topItemsIndexes2.length > 0 ? topItemsIndexes2[topItemsIndexes2.length - 1] + 1 : 0;\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex);\n            if (offsetPointRanges.length === 0) {\n              return null;\n            }\n            const maxIndex = totalCount2 - 1;\n            const items = tap([], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value;\n                let offset = point.offset;\n                let rangeStartIndex = range.start;\n                const size = point.size;\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap2) / (size + gap2));\n                  const itemCount = rangeStartIndex - range.start;\n                  offset += itemCount * size + itemCount * gap2;\n                }\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size;\n                  rangeStartIndex = minStartIndex;\n                }\n                const endIndex = Math.min(range.end, maxIndex);\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break;\n                  }\n                  result.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size + gap2;\n                }\n              }\n            });\n            return buildListState(items, topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        filter((value) => value !== null),\n        distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    );\n    connect(\n      pipe(\n        data,\n        filter(isDefined),\n        map((data2) => data2 == null ? void 0 : data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        listState,\n        map((value) => value.topListHeight)\n      ),\n      topListHeight\n    );\n    connect(topListHeight, rangeTopListHeight);\n    connect(\n      pipe(\n        listState,\n        map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    );\n    connect(\n      pipe(\n        listState,\n        map((state) => state.items)\n      ),\n      itemsRendered\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, data),\n        filter(([{ items }, totalCount2]) => items[items.length - 1].originalIndex === totalCount2 - 1),\n        map(([, totalCount2, data2]) => [totalCount2 - 1, data2]),\n        distinctUntilChanged(tupleComparator),\n        map(([count]) => count)\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        listState,\n        throttleTime(200),\n        filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length;\n        }),\n        map(({ items }) => items[0].index),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        map(({ items }) => {\n          let startIndex = 0;\n          let endIndex = items.length - 1;\n          while (items[startIndex].type === \"group\" && startIndex < endIndex) {\n            startIndex++;\n          }\n          while (items[endIndex].type === \"group\" && endIndex > startIndex) {\n            endIndex--;\n          }\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator)\n      )\n    );\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags };\n  },\n  tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n);\nconst initialItemCountSystem = system(\n  ([{ sizes, firstItemIndex, data, gap }, { initialTopMostItemIndex }, { listState }, { didMount }]) => {\n    const initialItemCount = statefulStream(0);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialItemCount),\n        filter(([, count]) => count !== 0),\n        withLatestFrom(initialTopMostItemIndex, sizes, firstItemIndex, gap, data),\n        map(([[, count], initialTopMostItemIndexValue, sizes2, firstItemIndex2, gap2, data2 = []]) => {\n          let includedGroupsCount = 0;\n          if (sizes2.groupIndices.length > 0) {\n            for (const index of sizes2.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break;\n              }\n              includedGroupsCount++;\n            }\n          }\n          const adjustedCount = count + includedGroupsCount;\n          const initialTopMostItemIndexNumber = getInitialTopMostItemIndexNumber(initialTopMostItemIndexValue, adjustedCount);\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({\n            index: index + initialTopMostItemIndexNumber,\n            size: 0,\n            offset: 0,\n            data: data2[index + initialTopMostItemIndexNumber]\n          }));\n          return buildListState(items, [], adjustedCount, gap2, sizes2, firstItemIndex2);\n        })\n      ),\n      listState\n    );\n    return { initialItemCount };\n  },\n  tup(sizeSystem, initialTopMostItemIndexSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n);\nconst scrollSeekSystem = system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = statefulStream(false);\n    const rangeChanged = stream();\n    const scrollSeekConfiguration = statefulStream(false);\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking2, range]) => {\n          const { exit, enter } = config;\n          if (isSeeking2) {\n            if (exit(speed, range)) {\n              return false;\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true;\n            }\n          }\n          return isSeeking2;\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    );\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking2, velocity, range], config]) => isSeeking2 && config && config.change && config.change(velocity, range)\n    );\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged };\n  },\n  tup(stateFlagsSystem),\n  { singleton: true }\n);\nconst topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0);\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  );\n  return { topItemCount };\n}, tup(listStateSystem));\nconst totalListHeightSystem = system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = stream();\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        map(([footerHeight2, fixedFooterHeight2, headerHeight2, fixedHeaderHeight2, listState2]) => {\n          return footerHeight2 + fixedFooterHeight2 + headerHeight2 + fixedHeaderHeight2 + listState2.offsetBottom + listState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(duc(totalListHeight), totalListHeightChanged);\n    return { totalListHeight, totalListHeightChanged };\n  },\n  tup(domIOSystem, listStateSystem),\n  { singleton: true }\n);\nfunction simpleMemoize(func) {\n  let called = false;\n  let result;\n  return () => {\n    if (!called) {\n      called = true;\n      result = func();\n    }\n    return result;\n  };\n}\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent);\n});\nconst upwardScrollFixSystem = system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress }\n  ]) => {\n    const deviationOffset = streamFromEmitter(\n      pipe(\n        listState,\n        withLatestFrom(lastJumpDueToItemResize),\n        scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize2]) => {\n            const totalHeight = bottom + offsetBottom;\n            let newDev = 0;\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0;\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight;\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize2;\n                  }\n                }\n              }\n            }\n            return [newDev, items, totalCount, totalHeight];\n          },\n          [0, [], 0, 0]\n        ),\n        filter(([amount]) => amount !== 0),\n        withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log, recalcInProgress),\n        filter(([, scrollTop2, scrollDirection2, scrollingInProgress2, , , recalcInProgress2]) => {\n          return !recalcInProgress2 && !scrollingInProgress2 && scrollTop2 !== 0 && scrollDirection2 === UP;\n        }),\n        map(([[amount], , , , , log2]) => {\n          log2(\"Upward scrolling compensation\", { amount }, LogLevel.DEBUG);\n          return amount;\n        })\n      )\n    );\n    function scrollByWith(offset) {\n      if (offset > 0) {\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n        publish(deviation, 0);\n      } else {\n        publish(deviation, 0);\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n      }\n    }\n    subscribe(pipe(deviationOffset, withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling2]) => {\n      if (isScrolling2 && isMobileSafari()) {\n        publish(deviation, deviationAmount - offset);\n      } else {\n        scrollByWith(-offset);\n      }\n    });\n    subscribe(\n      pipe(\n        combineLatest(statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        filter(([is, deviation2, recalc]) => !is && !recalc && deviation2 !== 0),\n        map(([_, deviation2]) => deviation2),\n        throttleTime(1)\n      ),\n      scrollByWith\n    );\n    connect(\n      pipe(\n        shiftWithOffset,\n        map((offset) => {\n          return { top: -offset };\n        })\n      ),\n      scrollBy\n    );\n    subscribe(\n      pipe(\n        beforeUnshiftWith,\n        withLatestFrom(sizes, gap),\n        map(([offset, { lastSize: defaultItemSize, groupIndices, sizeTree }, gap2]) => {\n          function getItemOffset(itemCount) {\n            return itemCount * (defaultItemSize + gap2);\n          }\n          if (groupIndices.length === 0) {\n            return getItemOffset(offset);\n          } else {\n            let amount = 0;\n            const defaultGroupSize = find(sizeTree, 0);\n            let recognizedOffsetItems = 0;\n            let groupIndex = 0;\n            while (recognizedOffsetItems < offset) {\n              recognizedOffsetItems++;\n              amount += defaultGroupSize;\n              let groupItemCount = groupIndices.length === groupIndex + 1 ? Infinity : groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n              if (recognizedOffsetItems + groupItemCount > offset) {\n                amount -= defaultGroupSize;\n                groupItemCount = offset - recognizedOffsetItems + 1;\n              }\n              recognizedOffsetItems += groupItemCount;\n              amount += getItemOffset(groupItemCount);\n              groupIndex++;\n            }\n            return amount;\n          }\n        })\n      ),\n      (offset) => {\n        publish(deviation, offset);\n        requestAnimationFrame(() => {\n          publish(scrollBy, { top: offset });\n          requestAnimationFrame(() => {\n            publish(deviation, 0);\n            publish(recalcInProgress, false);\n          });\n        });\n      }\n    );\n    return { deviation };\n  },\n  tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n);\nconst initialScrollTopSystem = system(\n  ([{ didMount }, { scrollTo }, { listState }]) => {\n    const initialScrollTop = statefulStream(0);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialScrollTop),\n        filter(([, offset]) => offset !== 0),\n        map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        handleNext(\n          pipe(\n            listState,\n            skip(1),\n            filter((state) => state.items.length > 1)\n          ),\n          () => {\n            requestAnimationFrame(() => {\n              publish(scrollTo, location);\n            });\n          }\n        );\n      }\n    );\n    return {\n      initialScrollTop\n    };\n  },\n  tup(propsReadySystem, domIOSystem, listStateSystem),\n  { singleton: true }\n);\nconst alignToBottomSystem = system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = statefulStream(false);\n    const paddingTopAddition = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        filter(([enabled]) => enabled),\n        map(([, viewportHeight2, totalListHeight2]) => {\n          return Math.max(0, viewportHeight2 - totalListHeight2);\n        }),\n        throttleTime(0),\n        distinctUntilChanged()\n      ),\n      0\n    );\n    return { alignToBottom, paddingTopAddition };\n  },\n  tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n);\nconst windowScrollerSystem = system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = stream();\n  const windowViewportRect = stream();\n  const windowScrollTo = stream();\n  const useWindowScroll = statefulStream(false);\n  const customScrollParent = statefulStream(void 0);\n  connect(\n    pipe(\n      combineLatest(windowScrollContainerState, windowViewportRect),\n      map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight\n        };\n      })\n    ),\n    scrollContainerState\n  );\n  connect(\n    pipe(\n      scrollTo,\n      withLatestFrom(windowViewportRect),\n      map(([scrollTo2, { offsetTop }]) => {\n        return {\n          ...scrollTo2,\n          top: scrollTo2.top + offsetTop\n        };\n      })\n    ),\n    windowScrollTo\n  );\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n    // signals\n    windowScrollTo\n  };\n}, tup(domIOSystem));\nconst defaultCalculateViewLocation = ({\n  itemTop: itemTop2,\n  itemBottom,\n  viewportTop,\n  viewportBottom,\n  locationParams: { behavior, align, ...rest }\n}) => {\n  if (itemTop2 < viewportTop) {\n    return { ...rest, behavior, align: align != null ? align : \"start\" };\n  }\n  if (itemBottom > viewportBottom) {\n    return { ...rest, behavior, align: align != null ? align : \"end\" };\n  }\n  return null;\n};\nconst scrollIntoViewSystem = system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex }\n  ]) => {\n    const scrollIntoView = stream();\n    connect(\n      pipe(\n        scrollIntoView,\n        withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        withLatestFrom(gap),\n        map(([[viewLocation, sizes2, viewportHeight2, totalCount2, headerHeight2, fixedHeaderHeight2, fixedFooterHeight2, scrollTop2], gap2]) => {\n          const { done, behavior, align, calculateViewLocation = defaultCalculateViewLocation, ...rest } = viewLocation;\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes2, totalCount2 - 1);\n          const itemTop2 = offsetOf(actualIndex, sizes2.offsetTree, gap2) + headerHeight2 + fixedHeaderHeight2;\n          const itemBottom = itemTop2 + findMaxKeyValue(sizes2.sizeTree, actualIndex)[1];\n          const viewportTop = scrollTop2 + fixedHeaderHeight2;\n          const viewportBottom = scrollTop2 + viewportHeight2 - fixedFooterHeight2;\n          const location = calculateViewLocation({\n            itemTop: itemTop2,\n            itemBottom,\n            viewportTop,\n            viewportBottom,\n            locationParams: { behavior, align, ...rest }\n          });\n          if (location) {\n            done && handleNext(\n              pipe(\n                scrollingInProgress,\n                filter((value) => value === false),\n                // skips the initial publish of false, and the cleanup call.\n                // but if scrollingInProgress is true, we skip the initial publish.\n                skip(getValue(scrollingInProgress) ? 1 : 2)\n              ),\n              done\n            );\n          } else {\n            done && done();\n          }\n          return location;\n        }),\n        filter((value) => value !== null)\n      ),\n      scrollToIndex\n    );\n    return {\n      scrollIntoView\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n);\nconst stateLoadSystem = system(\n  ([\n    { sizes, sizeRanges },\n    { scrollTop },\n    { initialTopMostItemIndex },\n    { didMount },\n    { useWindowScroll, windowScrollContainerState, windowViewportRect }\n  ]) => {\n    const getState = stream();\n    const restoreStateFrom = statefulStream(void 0);\n    const statefulWindowScrollContainerState = statefulStream(null);\n    const statefulWindowViewportRect = statefulStream(null);\n    connect(windowScrollContainerState, statefulWindowScrollContainerState);\n    connect(windowViewportRect, statefulWindowViewportRect);\n    subscribe(\n      pipe(getState, withLatestFrom(sizes, scrollTop, useWindowScroll, statefulWindowScrollContainerState, statefulWindowViewportRect)),\n      ([callback, sizes2, scrollTop2, useWindowScroll2, windowScrollContainerState2, windowViewportRect2]) => {\n        const ranges = sizeTreeToRanges(sizes2.sizeTree);\n        if (useWindowScroll2 && windowScrollContainerState2 !== null && windowViewportRect2 !== null) {\n          scrollTop2 = windowScrollContainerState2.scrollTop - windowViewportRect2.offsetTop;\n        }\n        callback({ ranges, scrollTop: scrollTop2 });\n      }\n    );\n    connect(pipe(restoreStateFrom, filter(isDefined), map(locationFromSnapshot)), initialTopMostItemIndex);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, state]) => state !== void 0),\n        distinctUntilChanged(),\n        map(([, snapshot]) => {\n          return snapshot.ranges;\n        })\n      ),\n      sizeRanges\n    );\n    return {\n      getState,\n      restoreStateFrom\n    };\n  },\n  tup(sizeSystem, domIOSystem, initialTopMostItemIndexSystem, propsReadySystem, windowScrollerSystem)\n);\nfunction locationFromSnapshot(snapshot) {\n  return { offset: snapshot.scrollTop, index: 0, align: \"start\" };\n}\nconst featureGroup1System = system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem2,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n    logger\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem2,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n      ...logger\n    };\n  },\n  tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem,\n    loggerSystem\n  )\n);\nconst listSystem = system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n      sizes\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    stateLoad,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1\n  ]) => {\n    connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        featureGroup1.windowViewportRect,\n        map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    );\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      sizes,\n      ...stateLoad\n    };\n  },\n  tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    stateLoadSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System\n  )\n);\nconst WEBKIT_STICKY = \"-webkit-sticky\";\nconst STICKY = \"sticky\";\nconst positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === \"undefined\") {\n    return STICKY;\n  }\n  const node = document.createElement(\"div\");\n  node.style.position = WEBKIT_STICKY;\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY;\n});\nfunction useWindowViewportRectRef(callback, customScrollParent) {\n  const viewportInfo = React.useRef(null);\n  const calculateInfo = React.useCallback(\n    (element) => {\n      if (element === null || !element.offsetParent) {\n        return;\n      }\n      const rect = element.getBoundingClientRect();\n      const visibleWidth = rect.width;\n      let visibleHeight, offsetTop;\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect();\n        const deltaTop = rect.top - customScrollParentRect.top;\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop);\n        offsetTop = deltaTop + customScrollParent.scrollTop;\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top);\n        offsetTop = rect.top + window.pageYOffset;\n      }\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth\n      };\n      callback(viewportInfo.current);\n    },\n    [callback, customScrollParent]\n  );\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo);\n  const scrollAndResizeEventHandler = React.useCallback(() => {\n    calculateInfo(ref.current);\n  }, [calculateInfo, ref]);\n  React.useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      const observer = new ResizeObserver(scrollAndResizeEventHandler);\n      observer.observe(customScrollParent);\n      return () => {\n        customScrollParent.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        observer.unobserve(customScrollParent);\n      };\n    } else {\n      window.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      window.addEventListener(\"resize\", scrollAndResizeEventHandler);\n      return () => {\n        window.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        window.removeEventListener(\"resize\", scrollAndResizeEventHandler);\n      };\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent]);\n  return callbackRef;\n}\nconst VirtuosoMockContext = React.createContext(void 0);\nconst VirtuosoGridMockContext = React.createContext(void 0);\nfunction identity(value) {\n  return value;\n}\nconst listComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const context = statefulStream(null);\n  const groupContent = statefulStream((index) => `Group ${index}`);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    TopItemListComponent: distinctProp(\"TopItemList\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    GroupComponent: distinctProp(\"Group\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\")\n  };\n});\nconst combinedSystem$2 = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, listComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder$1 = ({ height }) => /* @__PURE__ */ React.createElement(\"div\", { style: { height } });\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: \"none\" };\nconst ITEM_STYLE$1 = { overflowAnchor: \"none\" };\nconst Items$1 = /* @__PURE__ */ React.memo(function VirtuosoItems({ showTopList = false }) {\n  const listState = useEmitterValue$2(\"listState\");\n  const sizeRanges = usePublisher$2(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher$2(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher$2(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue$2(\"itemContent\");\n  const context = useEmitterValue$2(\"context\");\n  const groupContent = useEmitterValue$2(\"groupContent\");\n  const trackItemSizes = useEmitterValue$2(\"trackItemSizes\");\n  const itemSize = useEmitterValue$2(\"itemSize\");\n  const log = useEmitterValue$2(\"log\");\n  const listGap = usePublisher$2(\"gap\");\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter$2(\"deviation\", (value) => {\n    if (deviation !== value) {\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue$2(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue$2(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder$1;\n  const ListComponent = useEmitterValue$2(\"ListComponent\");\n  const ItemComponent = useEmitterValue$2(\"ItemComponent\");\n  const GroupComponent = useEmitterValue$2(\"GroupComponent\");\n  const computeItemKey = useEmitterValue$2(\"computeItemKey\");\n  const isSeeking = useEmitterValue$2(\"isSeeking\");\n  const hasGroups2 = useEmitterValue$2(\"groupIndices\").length > 0;\n  const paddingTopAddition = useEmitterValue$2(\"paddingTopAddition\");\n  const scrolledToInitialItem = useEmitterValue$2(\"scrolledToInitialItem\");\n  const containerStyle = showTopList ? {} : {\n    boxSizing: \"border-box\",\n    paddingTop: listState.offsetTop + paddingTopAddition,\n    paddingBottom: listState.offsetBottom,\n    marginTop: deviation,\n    ...scrolledToInitialItem ? {} : { visibility: \"hidden\" }\n  };\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      \"data-test-id\": showTopList ? \"virtuoso-top-item-list\" : \"virtuoso-item-list\"\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex;\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context);\n      if (isSeeking) {\n        return React.createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || \"item\",\n          ...item.type === \"group\" ? {} : { groupIndex: item.groupIndex }\n        });\n      }\n      if (item.type === \"group\") {\n        return React.createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            style: GROUP_STYLE\n          },\n          groupContent(item.index, context)\n        );\n      } else {\n        return React.createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            \"data-item-group-index\": item.groupIndex,\n            item: item.data,\n            style: ITEM_STYLE$1\n          },\n          hasGroups2 ? itemContent(item.index, item.groupIndex, item.data, context) : itemContent(item.index, item.data, context)\n        );\n      }\n    })\n  );\n});\nconst scrollerStyle = {\n  height: \"100%\",\n  outline: \"none\",\n  overflowY: \"auto\",\n  position: \"relative\",\n  WebkitOverflowScrolling: \"touch\"\n};\nconst viewportStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  top: 0\n};\nconst topItemListStyle = {\n  width: \"100%\",\n  position: positionStickyCssValue(),\n  top: 0,\n  zIndex: 1\n};\nfunction contextPropIfNotDomElement(element, context) {\n  if (typeof element === \"string\") {\n    return void 0;\n  }\n  return { context };\n}\nconst Header$1 = /* @__PURE__ */ React.memo(function VirtuosoHeader() {\n  const Header2 = useEmitterValue$2(\"HeaderComponent\");\n  const headerHeight = usePublisher$2(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer$1 = /* @__PURE__ */ React.memo(function VirtuosoFooter() {\n  const Footer2 = useEmitterValue$2(\"FooterComponent\");\n  const footerHeight = usePublisher$2(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nfunction buildScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"scrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const scrollerRefCallback = useEmitterValue2(\"scrollerRef\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    );\n    useEmitter2(\"scrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef,\n        style: { ...scrollerStyle, ...style },\n        \"data-test-id\": \"virtuoso-scroller\",\n        \"data-virtuoso-scroller\": true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nfunction buildWindowScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"windowScrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const totalListHeight = useEmitterValue2(\"totalListHeight\");\n    const deviation = useEmitterValue2(\"deviation\");\n    const customScrollParent = useEmitterValue2(\"customScrollParent\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    );\n    useIsomorphicLayoutEffect$1(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window;\n      return () => {\n        scrollerRef.current = null;\n      };\n    }, [scrollerRef, customScrollParent]);\n    useEmitter2(\"windowScrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        style: { position: \"relative\", ...style, ...totalListHeight !== 0 ? { height: totalListHeight + deviation } : {} },\n        \"data-virtuoso-scroller\": true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nconst Viewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher$2(\"viewportHeight\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher$2(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TopItemListContainer = ({ children }) => {\n  const TopItemList = useEmitterValue$2(\"TopItemListComponent\");\n  const headerHeight = useEmitterValue$2(\"headerHeight\");\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` };\n  const context = useEmitterValue$2(\"context\");\n  return React.createElement(TopItemList || \"div\", { style, context }, children);\n};\nconst ListRoot = /* @__PURE__ */ React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const showTopList = useEmitterValue$2(\"topItemsIndexes\").length > 0;\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$2 : Scroller$2;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$2 : Viewport$2;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, showTopList && /* @__PURE__ */ React.createElement(TopItemListContainer, null, /* @__PURE__ */ React.createElement(Items$1, { showTopList: true })), /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header$1, null), /* @__PURE__ */ React.createElement(Items$1, null), /* @__PURE__ */ React.createElement(Footer$1, null)));\n});\nconst {\n  Component: List,\n  usePublisher: usePublisher$2,\n  useEmitterValue: useEmitterValue$2,\n  useEmitter: useEmitter$2\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$2,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      itemContent: \"itemContent\",\n      groupContent: \"groupContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      groupCounts: \"groupCounts\",\n      topItemCount: \"topItemCount\",\n      firstItemIndex: \"firstItemIndex\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      autoscrollToBottom: \"autoscrollToBottom\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  ListRoot\n);\nconst Scroller$2 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst WindowScroller$2 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst Virtuoso = List;\nconst GroupedVirtuoso = List;\nconst INITIAL_GRID_STATE = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst PROBE_GRID_STATE = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst { round, ceil, floor, min, max } = Math;\nfunction buildProbeGridState(items) {\n  return {\n    ...PROBE_GRID_STATE,\n    items\n  };\n}\nfunction buildItems(startIndex, endIndex, data) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => {\n    const dataItem = data === null ? null : data[i + startIndex];\n    return { index: i + startIndex, data: dataItem };\n  });\n}\nfunction gapComparator(prev, next) {\n  return prev && prev.column === next.column && prev.row === next.row;\n}\nfunction dimensionComparator(prev, next) {\n  return prev && prev.width === next.width && prev.height === next.height;\n}\nconst gridSystem = /* @__PURE__ */ system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState, footerHeight, headerHeight },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, useWindowScroll, customScrollParent, windowScrollContainerState, windowScrollTo },\n    log\n  ]) => {\n    const totalCount = statefulStream(0);\n    const initialItemCount = statefulStream(0);\n    const gridState = statefulStream(INITIAL_GRID_STATE);\n    const viewportDimensions = statefulStream({ height: 0, width: 0 });\n    const itemDimensions = statefulStream({ height: 0, width: 0 });\n    const scrollToIndex = stream();\n    const scrollHeight = stream();\n    const deviation = statefulStream(0);\n    const data = statefulStream(null);\n    const gap = statefulStream({ row: 0, column: 0 });\n    const stateChanged = stream();\n    const restoreStateFrom = stream();\n    const stateRestoreInProgress = statefulStream(false);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrolledToInitialItem = statefulStream(true);\n    const scrollScheduled = statefulStream(false);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location)\n      ),\n      () => {\n        publish(scrolledToInitialItem, false);\n        publish(initialItemCount, 0);\n      }\n    );\n    subscribe(\n      pipe(\n        combineLatest(didMount, scrolledToInitialItem, itemDimensions, viewportDimensions, initialTopMostItemIndex, scrollScheduled),\n        filter(([didMount2, scrolledToInitialItem2, itemDimensions2, viewportDimensions2, , scrollScheduled2]) => {\n          return didMount2 && !scrolledToInitialItem2 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0 && !scrollScheduled2;\n        })\n      ),\n      ([, , , , initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(1, () => {\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n        handleNext(pipe(scrollTop), () => {\n          publish(listBoundary, [0, 0]);\n          publish(scrolledToInitialItem, true);\n        });\n      }\n    );\n    connect(\n      pipe(\n        restoreStateFrom,\n        filter((value) => value !== void 0 && value !== null && value.scrollTop > 0),\n        mapTo(0)\n      ),\n      initialItemCount\n    );\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, snapshot]) => snapshot !== void 0 && snapshot !== null)\n      ),\n      ([, snapshot]) => {\n        if (!snapshot) {\n          return;\n        }\n        publish(viewportDimensions, snapshot.viewport), publish(itemDimensions, snapshot == null ? void 0 : snapshot.item);\n        publish(gap, snapshot.gap);\n        if (snapshot.scrollTop > 0) {\n          publish(stateRestoreInProgress, true);\n          handleNext(pipe(scrollTop, skip(1)), (_value) => {\n            publish(stateRestoreInProgress, false);\n          });\n          publish(scrollTo, { top: snapshot.scrollTop });\n        }\n      }\n    );\n    connect(\n      pipe(\n        viewportDimensions,\n        map(({ height }) => height)\n      ),\n      viewportHeight\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(viewportDimensions, dimensionComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(gap, (prev, next) => prev && prev.column === next.column && prev.row === next.row),\n          duc(scrollTop)\n        ),\n        map(([viewport, item, gap2, scrollTop2]) => ({\n          viewport,\n          item,\n          gap: gap2,\n          scrollTop: scrollTop2\n        }))\n      ),\n      stateChanged\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(totalCount),\n          visibleRange,\n          duc(gap, gapComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(viewportDimensions, dimensionComparator),\n          duc(data),\n          duc(initialItemCount),\n          duc(stateRestoreInProgress),\n          duc(scrolledToInitialItem),\n          duc(initialTopMostItemIndex)\n        ),\n        filter(([, , , , , , , stateRestoreInProgress2]) => {\n          return !stateRestoreInProgress2;\n        }),\n        map(\n          ([\n            totalCount2,\n            [startOffset, endOffset],\n            gap2,\n            item,\n            viewport,\n            data2,\n            initialItemCount2,\n            ,\n            scrolledToInitialItem2,\n            initialTopMostItemIndex2\n          ]) => {\n            const { row: rowGap, column: columnGap } = gap2;\n            const { height: itemHeight, width: itemWidth } = item;\n            const { width: viewportWidth } = viewport;\n            if (initialItemCount2 === 0 && (totalCount2 === 0 || viewportWidth === 0)) {\n              return INITIAL_GRID_STATE;\n            }\n            if (itemWidth === 0) {\n              const startIndex2 = getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2);\n              const endIndex2 = startIndex2 === 0 ? Math.max(initialItemCount2 - 1, 0) : startIndex2;\n              return buildProbeGridState(buildItems(startIndex2, endIndex2, data2));\n            }\n            const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap);\n            let startIndex;\n            let endIndex;\n            if (!scrolledToInitialItem2) {\n              startIndex = 0;\n              endIndex = -1;\n            } else if (startOffset === 0 && endOffset === 0 && initialItemCount2 > 0) {\n              startIndex = 0;\n              endIndex = initialItemCount2 - 1;\n            } else {\n              startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap));\n              endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1;\n              endIndex = min(totalCount2 - 1, max(endIndex, perRow - 1));\n              startIndex = min(endIndex, max(0, startIndex));\n            }\n            const items = buildItems(startIndex, endIndex, data2);\n            const { top, bottom } = gridLayout(viewport, gap2, item, items);\n            const rowCount = ceil(totalCount2 / perRow);\n            const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap;\n            const offsetBottom = totalHeight - bottom;\n            return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth };\n          }\n        )\n      ),\n      gridState\n    );\n    connect(\n      pipe(\n        data,\n        filter((data2) => data2 !== null),\n        map((data2) => data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        filter(([viewportDimensions2, itemDimensions2, { items }]) => {\n          return items.length > 0 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0;\n        }),\n        map(([viewportDimensions2, itemDimensions2, { items }, gap2]) => {\n          const { top, bottom } = gridLayout(viewportDimensions2, gap2, itemDimensions2, items);\n          return [top, bottom];\n        }),\n        distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    );\n    const hasScrolled = statefulStream(false);\n    connect(\n      pipe(\n        scrollTop,\n        withLatestFrom(hasScrolled),\n        map(([scrollTop2, hasScrolled2]) => {\n          return hasScrolled2 || scrollTop2 !== 0;\n        })\n      ),\n      hasScrolled\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, hasScrolled),\n        filter(([{ items }, totalCount2, hasScrolled2]) => hasScrolled2 && items[items.length - 1].index === totalCount2 - 1),\n        map(([, totalCount2]) => totalCount2 - 1),\n        distinctUntilChanged()\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0;\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        mapTo(0),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        withLatestFrom(stateRestoreInProgress),\n        filter(([{ items }, stateRestoreInProgress2]) => items.length > 0 && !stateRestoreInProgress2),\n        map(([{ items }]) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator),\n        throttleTime(0)\n      )\n    );\n    connect(rangeChanged, scrollSeek.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        map(([location, viewportDimensions2, itemDimensions2, totalCount2, gap2]) => {\n          const normalLocation = normalizeIndexLocation(location);\n          const { align, behavior, offset } = normalLocation;\n          let index = normalLocation.index;\n          if (index === \"LAST\") {\n            index = totalCount2 - 1;\n          }\n          index = max(0, index, min(totalCount2 - 1, index));\n          let top = itemTop(viewportDimensions2, gap2, itemDimensions2, index);\n          if (align === \"end\") {\n            top = round(top - viewportDimensions2.height + itemDimensions2.height);\n          } else if (align === \"center\") {\n            top = round(top - viewportDimensions2.height / 2 + itemDimensions2.height / 2);\n          }\n          if (offset) {\n            top += offset;\n          }\n          return { top, behavior };\n        })\n      ),\n      scrollTo\n    );\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        gridState,\n        map((gridState2) => {\n          return gridState2.offsetBottom + gridState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(\n      pipe(\n        windowViewportRect,\n        map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      footerHeight,\n      headerHeight,\n      initialItemCount,\n      gap,\n      restoreStateFrom,\n      ...scrollSeek,\n      initialTopMostItemIndex,\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      stateChanged,\n      propsReady,\n      stateRestoreInProgress,\n      ...log\n    };\n  },\n  tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n);\nfunction gridLayout(viewport, gap, item, items) {\n  const { height: itemHeight } = item;\n  if (itemHeight === void 0 || items.length === 0) {\n    return { top: 0, bottom: 0 };\n  }\n  const top = itemTop(viewport, gap, item, items[0].index);\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight;\n  return { top, bottom };\n}\nfunction itemTop(viewport, gap, item, index) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column);\n  const rowCount = floor(index / perRow);\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row;\n  return top > 0 ? top + gap.row : top;\n}\nfunction itemsPerRow(viewportWidth, itemWidth, gap) {\n  return max(1, floor((viewportWidth + gap) / (floor(itemWidth) + gap)));\n}\nconst gridComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const components = statefulStream({});\n  const context = statefulStream(null);\n  const itemClassName = statefulStream(\"virtuoso-grid-item\");\n  const listClassName = statefulStream(\"virtuoso-grid-list\");\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\", \"div\")\n  };\n});\nconst combinedSystem$1 = /* @__PURE__ */ system(([gridSystem2, gridComponentPropsSystem2]) => {\n  return { ...gridSystem2, ...gridComponentPropsSystem2 };\n}, tup(gridSystem, gridComponentPropsSystem));\nconst GridItems = /* @__PURE__ */ React.memo(function GridItems2() {\n  const gridState = useEmitterValue$1(\"gridState\");\n  const listClassName = useEmitterValue$1(\"listClassName\");\n  const itemClassName = useEmitterValue$1(\"itemClassName\");\n  const itemContent = useEmitterValue$1(\"itemContent\");\n  const computeItemKey = useEmitterValue$1(\"computeItemKey\");\n  const isSeeking = useEmitterValue$1(\"isSeeking\");\n  const scrollHeightCallback = usePublisher$1(\"scrollHeight\");\n  const ItemComponent = useEmitterValue$1(\"ItemComponent\");\n  const ListComponent = useEmitterValue$1(\"ListComponent\");\n  const ScrollSeekPlaceholder = useEmitterValue$1(\"ScrollSeekPlaceholder\");\n  const context = useEmitterValue$1(\"context\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const gridGap = usePublisher$1(\"gap\");\n  const log = useEmitterValue$1(\"log\");\n  const stateRestoreInProgress = useEmitterValue$1(\"stateRestoreInProgress\");\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement.parentElement.scrollHeight;\n    scrollHeightCallback(scrollHeight);\n    const firstItem = el.firstChild;\n    if (firstItem) {\n      const { width, height } = firstItem.getBoundingClientRect();\n      itemDimensions({ width, height });\n    }\n    gridGap({\n      row: resolveGapValue(\"row-gap\", getComputedStyle(el).rowGap, log),\n      column: resolveGapValue(\"column-gap\", getComputedStyle(el).columnGap, log)\n    });\n  });\n  if (stateRestoreInProgress) {\n    return null;\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n      \"data-test-id\": \"virtuoso-item-list\"\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index, item.data, context);\n      return isSeeking ? React.createElement(ScrollSeekPlaceholder, {\n        key,\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        index: item.index,\n        height: gridState.itemHeight,\n        width: gridState.itemWidth\n      }) : React.createElement(\n        ItemComponent,\n        { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, \"data-index\": item.index, key },\n        itemContent(item.index, item.data, context)\n      );\n    })\n  );\n});\nconst Header = React.memo(function VirtuosoHeader2() {\n  const Header2 = useEmitterValue$1(\"HeaderComponent\");\n  const headerHeight = usePublisher$1(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer = React.memo(function VirtuosoGridFooter() {\n  const Footer2 = useEmitterValue$1(\"FooterComponent\");\n  const footerHeight = usePublisher$1(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nconst Viewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const viewportDimensions = usePublisher$1(\"viewportDimensions\");\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect());\n  });\n  React.useEffect(() => {\n    if (ctx) {\n      viewportDimensions({ height: ctx.viewportHeight, width: ctx.viewportWidth });\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n    }\n  }, [ctx, viewportDimensions, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef }, children);\n};\nconst WindowViewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const windowViewportRect = usePublisher$1(\"windowViewportRect\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: ctx.viewportWidth });\n    }\n  }, [ctx, windowViewportRect, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle }, children);\n};\nconst GridRoot = /* @__PURE__ */ React.memo(function GridRoot2({ ...props }) {\n  const useWindowScroll = useEmitterValue$1(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$1 : Scroller$1;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$1 : Viewport$1;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header, null), /* @__PURE__ */ React.createElement(GridItems, null), /* @__PURE__ */ React.createElement(Footer, null)));\n});\nconst {\n  Component: Grid,\n  usePublisher: usePublisher$1,\n  useEmitterValue: useEmitterValue$1,\n  useEmitter: useEmitter$1\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$1,\n  {\n    optional: {\n      context: \"context\",\n      totalCount: \"totalCount\",\n      overscan: \"overscan\",\n      itemContent: \"itemContent\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      listClassName: \"listClassName\",\n      itemClassName: \"itemClassName\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\",\n      restoreStateFrom: \"restoreStateFrom\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\"\n    },\n    methods: {\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      stateChanged: \"stateChanged\"\n    }\n  },\n  GridRoot\n);\nconst Scroller$1 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nconst WindowScroller$1 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nfunction resolveGapValue(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nconst VirtuosoGrid = Grid;\nconst tableComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => /* @__PURE__ */ React.createElement(\"td\", null, \"Item $\", index));\n  const context = statefulStream(null);\n  const fixedHeaderContent = statefulStream(null);\n  const fixedFooterContent = statefulStream(null);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp(\"Table\", \"table\"),\n    TableHeadComponent: distinctProp(\"TableHead\", \"thead\"),\n    TableFooterComponent: distinctProp(\"TableFoot\", \"tfoot\"),\n    TableBodyComponent: distinctProp(\"TableBody\", \"tbody\"),\n    TableRowComponent: distinctProp(\"TableRow\", \"tr\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\"),\n    FillerRow: distinctProp(\"FillerRow\")\n  };\n});\nconst combinedSystem = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, tableComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height } }));\nconst DefaultFillerRow = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height, padding: 0, border: 0 } }));\nconst ITEM_STYLE = { overflowAnchor: \"none\" };\nconst Items = /* @__PURE__ */ React.memo(function VirtuosoItems2() {\n  const listState = useEmitterValue(\"listState\");\n  const sizeRanges = usePublisher(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue(\"itemContent\");\n  const trackItemSizes = useEmitterValue(\"trackItemSizes\");\n  const itemSize = useEmitterValue(\"itemSize\");\n  const log = useEmitterValue(\"log\");\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    void 0,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter(\"deviation\", (value) => {\n    if (deviation !== value) {\n      ref.current.style.marginTop = `${value}px`;\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder;\n  const FillerRow = useEmitterValue(\"FillerRow\") || DefaultFillerRow;\n  const TableBodyComponent = useEmitterValue(\"TableBodyComponent\");\n  const TableRowComponent = useEmitterValue(\"TableRowComponent\");\n  const computeItemKey = useEmitterValue(\"computeItemKey\");\n  const isSeeking = useEmitterValue(\"isSeeking\");\n  const paddingTopAddition = useEmitterValue(\"paddingTopAddition\");\n  const firstItemIndex = useEmitterValue(\"firstItemIndex\");\n  const statefulTotalCount = useEmitterValue(\"statefulTotalCount\");\n  const context = useEmitterValue(\"context\");\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation;\n  const paddingBottom = listState.offsetBottom;\n  const paddingTopEl = paddingTop > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingTop, key: \"padding-top\", context }) : null;\n  const paddingBottomEl = paddingBottom > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingBottom, key: \"padding-bottom\", context }) : null;\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex;\n    const key = computeItemKey(index + firstItemIndex, item.data, context);\n    if (isSeeking) {\n      return React.createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || \"item\"\n      });\n    }\n    return React.createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        \"data-index\": index,\n        \"data-known-size\": item.size,\n        \"data-item-index\": item.index,\n        item: item.data,\n        style: ITEM_STYLE\n      },\n      itemContent(item.index, item.data, context)\n    );\n  });\n  return React.createElement(\n    TableBodyComponent,\n    { ref: callbackRef, \"data-test-id\": \"virtuoso-item-list\", ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  );\n});\nconst Viewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher(\"viewportHeight\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TableRoot = /* @__PURE__ */ React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const fixedHeaderHeight = usePublisher(\"fixedHeaderHeight\");\n  const fixedFooterHeight = usePublisher(\"fixedFooterHeight\");\n  const fixedHeaderContent = useEmitterValue(\"fixedHeaderContent\");\n  const fixedFooterContent = useEmitterValue(\"fixedFooterContent\");\n  const context = useEmitterValue(\"context\");\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, \"height\")));\n  const tfootRef = useSize(compose(fixedFooterHeight, (el) => correctItemSize(el, \"height\")));\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport;\n  const TheTable = useEmitterValue(\"TableComponent\");\n  const TheTHead = useEmitterValue(\"TableHeadComponent\");\n  const TheTFoot = useEmitterValue(\"TableFooterComponent\");\n  const theHead = fixedHeaderContent ? React.createElement(\n    TheTHead,\n    {\n      key: \"TableHead\",\n      style: { zIndex: 2, position: \"sticky\", top: 0 },\n      ref: theadRef,\n      ...contextPropIfNotDomElement(TheTHead, context)\n    },\n    fixedHeaderContent()\n  ) : null;\n  const theFoot = fixedFooterContent ? React.createElement(\n    TheTFoot,\n    {\n      key: \"TableFoot\",\n      style: { zIndex: 1, position: \"sticky\", bottom: 0 },\n      ref: tfootRef,\n      ...contextPropIfNotDomElement(TheTFoot, context)\n    },\n    fixedFooterContent()\n  ) : null;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, React.createElement(\n    TheTable,\n    { style: { borderSpacing: 0, overflowAnchor: \"none\" }, ...contextPropIfNotDomElement(TheTable, context) },\n    [theHead, /* @__PURE__ */ React.createElement(Items, { key: \"TableBody\" }), theFoot]\n  )));\n});\nconst {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: \"context\",\n      followOutput: \"followOutput\",\n      firstItemIndex: \"firstItemIndex\",\n      itemContent: \"itemContent\",\n      fixedHeaderContent: \"fixedHeaderContent\",\n      fixedFooterContent: \"fixedFooterContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      topItemCount: \"topItemCount\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      groupCounts: \"groupCounts\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  TableRoot\n);\nconst Scroller = /* @__PURE__ */ buildScroller({ usePublisher, useEmitterValue, useEmitter });\nconst WindowScroller = /* @__PURE__ */ buildWindowScroller({ usePublisher, useEmitterValue, useEmitter });\nconst TableVirtuoso = Table;\nexport {\n  GroupedVirtuoso,\n  LogLevel,\n  TableVirtuoso,\n  Virtuoso,\n  VirtuosoGrid,\n  VirtuosoGridMockContext,\n  VirtuosoMockContext\n};\n","import { VirtuosoGrid } from \"react-virtuoso\";\nimport { useState } from \"react\";\n\nimport { CardProduct, DropDown, Isotype } from \"../../../../../packages/ui/src\";\nimport { CardProductProps } from \"ui/src/molecules/CardProduct\";\nimport {\n  Box,\n  MenuItem,\n  Paper,\n  SxProps,\n  Typography,\n  styled,\n} from \"@mui/material\";\n\nconst defaultProducts = Array.from({ length: 10 }).map(() => ({\n  alt: \"Spiderman\",\n  description: \"Juego de Spiderman\",\n  price: 188,\n  src: \"https://m.media-amazon.com/images/I/815aKWcEkEL.jpg\",\n  title: \"Spiderman\",\n  previousPrice: 189,\n}));\n\nconst Loading = () => <Typography>Loading</Typography>;\n\nconst ItemContent = (_index: number, product: CardProductProps) => (\n  <CardProduct {...product} />\n);\n\n//@ts-ignore\nconst ListContainer: any = styled(\"div\")({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"2rem\",\n});\n\n//@ts-ignore\nconst ItemContainer: any = styled(\"div\")(({ theme }) => ({\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"unset\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    width: \"calc(50% - 1rem)\",\n  },\n}));\n\nconst sxProductListHeader: SxProps = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: 2,\n  alignItems: \"center\",\n  gap: 2,\n};\n\nexport default function ProductsList() {\n  const [products, setProducts] = useState(defaultProducts);\n\n  const loadMore = () => {\n    setTimeout(() => {\n      setProducts((prev) => [...prev, ...defaultProducts]);\n    }, 1000);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", padding: \"1rem\", marginTop: 10 }}>\n      <Box sx={sxProductListHeader}>\n        <Isotype />\n        <DropDown sxForm={{ width: { xs: \"90%\", md: \"30%\" } }}>\n          <MenuItem value={1}>Juegos PS4</MenuItem>\n          <MenuItem value={2}>Juegos PS5</MenuItem>\n          <MenuItem value={3}>Juegos Switch</MenuItem>\n          <MenuItem value={4}>Juegos Xbox</MenuItem>\n        </DropDown>\n      </Box>\n      <VirtuosoGrid\n        useWindowScroll\n        style={{ height: 300 }}\n        data={products}\n        endReached={loadMore}\n        overscan={10}\n        itemContent={ItemContent}\n        components={{\n          Footer: Loading,\n          Item: ItemContainer,\n          List: ListContainer,\n        }}\n      />\n    </Paper>\n  );\n}\n"],"names":["getOverlayAlpha","elevation","alphaValue","getOverlayAlpha$1","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","square","variant","classes","slots","composeClasses","PaperRoot","styled","props","styles","theme","_theme$vars$overlays","_extends","alpha","Paper","React.forwardRef","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","_jsx","clsx","Paper$1","Ripple","pulsate","rippleX","rippleY","rippleSize","inProp","onExited","timeout","leaving","setLeaving","React.useState","rippleClassName","rippleStyles","childClassName","React.useEffect","timeoutId","touchRippleClasses","touchRippleClasses$1","_","t","_t","_t2","_t3","_t4","DURATION","DELAY_RIPPLE","enterKeyframe","keyframes","exitKeyframe","pulsateKeyframe","TouchRippleRoot","TouchRippleRipple","TouchRipple","centerProp","ripples","setRipples","nextKey","React.useRef","rippleCallback","ignoringMouseDown","startTimer","startTimerCommit","container","startCommit","React.useCallback","params","cb","oldRipples","start","event","options","center","fakeElement","element","rect","clientX","clientY","sizeX","sizeY","stop","React.useImperativeHandle","TransitionGroup","TouchRipple$1","getButtonBaseUtilityClass","buttonBaseClasses","buttonBaseClasses$1","disabled","focusVisible","focusVisibleClassName","composedClasses","ButtonBaseRoot","ButtonBase","action","centerRipple","children","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","buttonRef","rippleRef","handleRippleRef","useForkRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","mountedState","setMountedState","enableTouchRipple","useRippleHandler","rippleAction","eventCallback","skipRippleAction","useEventCallback","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","isNonNativeButton","button","keydownRef","handleKeyDown","handleKeyUp","ComponentProp","buttonProps","handleRef","_jsxs","ButtonBase$1","dividerClasses","dividerClasses$1","ListContext","React.createContext","ListContext$1","listItemIconClasses","listItemIconClasses$1","listItemTextClasses","listItemTextClasses$1","getMenuItemUtilityClass","menuItemClasses","menuItemClasses$1","overridesResolver","dense","divider","disableGutters","selected","MenuItemRoot","prop","rootShouldForwardProp","MenuItem","autoFocus","role","tabIndexProp","context","React.useContext","childContext","React.useMemo","menuItemRef","useEnhancedEffect","MenuItem$1","PUBLISH","SUBSCRIBE","RESET","VALUE","compose","a","b","arg","thrush","proc","curry2to1","arg1","arg2","curry1to0","tap","tup","args","call","always","value","joinProc","procs","noop","subscribe","emitter","subscription","publish","publisher","reset","getValue","depot","connect","handleNext","unsub","stream","subscriptions","indexOf","statefulStream","initial","innerSubject","eventHandler","currentSubscription","cleanup","streamFromEmitter","stream2","statefulStreamFromEmitter","combineOperators","operators","subscriber","pipe","source","project","defaultComparator","previous","next","distinctUntilChanged","comparator","current","done","filter","predicate","map","mapTo","scan","scanner","skip","times","throttleTime","interval","currentValue","debounceTime","withLatestFrom","sources","values","called","pendingCall","allCalled","index","bit","prevCalled","call2","merge","duc","combineLatest","emitters","system","constructor","dependencies","singleton","id","init","systemSpec","singletons","_init","id2","system2","e","omit","keys","obj","result","idx","len","useIsomorphicLayoutEffect$2","React","systemToComponent","map2","Root","requiredPropNames","optionalPropNames","methodNames","eventNames","Context","applyPropsToSystem","requiredPropName","optionalPropName","buildMethods","acc","methodName","buildEventHandlers","handlers","eventName","propsWithChildren","system22","key","setValue","callback","useIsomorphicLayoutEffect","useIsomorphicLayoutEffect$1","LogLevel","LogLevel2","CONSOLE_METHOD_MAP","getGlobalThis","loggerSystem","logLevel","label","message","level","_a","currentLevel","useSizeWithElRef","enabled","callbackRef","_el","observer","entries","elRef","useSize","correctItemSize","el","dimension","approximatelyEqual","num1","num2","useScrollTop","scrollContainerStateCallback","smoothScrollTargetReached","scrollerElement","scrollerRefCallback","customScrollParent","scrollerRef","scrollTopTarget","timeoutRef","handler","ev","windowScroll","scrollTop","scrollHeight","viewportHeight","ReactDOM","localRef","scrollToCallback","location","scrollerElement2","isSmooth","offsetHeight","maxScrollTop","scrollByCallback","domIOSystem","scrollContainerState","deviation","statefulScrollTop","headerHeight","fixedHeaderHeight","fixedFooterHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","scrollTop2","scrollHeight2","SUPPORTS_SCROLL_TO_OPTIONS","normalizeIndexLocation","UP","DOWN","NONE$1","INITIAL_BOTTOM_STATE","DEFAULT_AT_TOP_THRESHOLD","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","atTopThreshold","isScrolling","isScrollingBy","top","atTopThreshold2","atBottomState","viewportHeight2","_headerHeight","_footerHeight","atBottomThreshold2","isAtBottom2","state","atBottomBecause","scrollTopDelta","notAtBottomBecause","prev","lastJumpDueToItemResize","atBottom","scrollDirection","scrollVelocity","isScrolling2","propsReadySystem","log","propsReady","didMount","ready","skipFrames","frameCount","getInitialTopMostItemIndexNumber","totalCount","lastIndex","tupleComparator","rangeComparator","TOP","BOTTOM","NONE","getOverscan","overscan","end","direction","getViewportIncrease","sizeRangeSystem","listBoundary","topListHeight","increaseViewportBy","visibleRange","headerHeight2","listTop","listBottom","overscan2","topListHeight2","fixedHeaderHeight2","deviation2","increaseViewportBy2","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","scrollSeekSystem","isSeeking","rangeChanged","scrollSeekConfiguration","config","speed","isSeeking2","range","exit","enter","velocity","simpleMemoize","func","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","windowScrollTop","offsetTop","scrollTo2","WEBKIT_STICKY","STICKY","positionStickyCssValue","node","useWindowViewportRectRef","viewportInfo","calculateInfo","visibleWidth","visibleHeight","customScrollParentRect","deltaTop","scrollAndResizeEventHandler","VirtuosoGridMockContext","identity","scrollerStyle","viewportStyle","contextPropIfNotDomElement","buildScroller","usePublisher2","useEmitter2","useEmitterValue2","style","ScrollerComponent","buildWindowScroller","totalListHeight","INITIAL_GRID_STATE","PROBE_GRID_STATE","round","ceil","floor","min","max","buildProbeGridState","items","buildItems","startIndex","endIndex","data","i","dataItem","gapComparator","dimensionComparator","gridSystem","stateFlags","scrollSeek","initialItemCount","gridState","viewportDimensions","itemDimensions","scrollToIndex","gap","stateChanged","restoreStateFrom","stateRestoreInProgress","initialTopMostItemIndex","scrolledToInitialItem","scrollScheduled","didMount2","scrolledToInitialItem2","itemDimensions2","viewportDimensions2","scrollScheduled2","initialTopMostItemIndex2","snapshot","_value","height","viewport","item","gap2","stateRestoreInProgress2","totalCount2","startOffset","endOffset","data2","initialItemCount2","rowGap","columnGap","itemHeight","itemWidth","viewportWidth","startIndex2","endIndex2","perRow","itemsPerRow","bottom","gridLayout","rowCount","offsetBottom","hasScrolled","hasScrolled2","endReached","startReached","normalLocation","align","behavior","offset","itemTop","gridState2","gridComponentPropsSystem","itemContent","components","itemClassName","listClassName","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","components2","combinedSystem$1","gridSystem2","gridComponentPropsSystem2","GridItems","useEmitterValue$1","scrollHeightCallback","usePublisher$1","ItemComponent","ListComponent","ScrollSeekPlaceholder","gridGap","listRef","firstItem","width","resolveGapValue","Header","Header2","Footer","Footer2","Viewport$1","ctx","viewportRef","WindowViewport$1","GridRoot","TheScroller","WindowScroller$1","Scroller$1","TheViewport","Grid","useEmitter$1","property","VirtuosoGrid","defaultProducts","Loading","jsx","Typography","ItemContent","_index","product","CardProduct","ListContainer","ItemContainer","sxProductListHeader","ProductsList","products","setProducts","useState","jsxs","Box","Isotype","DropDown"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}